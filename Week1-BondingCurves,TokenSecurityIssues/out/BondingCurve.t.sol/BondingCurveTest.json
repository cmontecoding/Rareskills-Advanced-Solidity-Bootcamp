{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBuyAndSellOne",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBuyMultiple",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBuyThree",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSell",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b50612b188061003d6000396000f3fe6080604052600436106200010b5760003560e01c806366d9a9a01162000095578063ba414fa61162000060578063ba414fa6146200027f578063e20c9f7114620002a8578063e816c59e14620002c0578063fa7626d414620002d857600080fd5b806366d9a9a0146200020157806385226c811462000228578063916a17c6146200024f578063b5508aa9146200026757600080fd5b80632ade388011620000d65780632ade3880146200019257806331c42ca614620001b95780633e5e3c2314620001d15780633f7286f414620001e957600080fd5b8063024b85d814620001185780630a9254e414620001325780631ed7831c146200014a57806323d6213c146200017a57600080fd5b366200011357005b600080fd5b3480156200012557600080fd5b5062000130620002f4565b005b3480156200013f57600080fd5b5062000130620004af565b3480156200015757600080fd5b506200016262000623565b604051620001719190620013fc565b60405180910390f35b3480156200018757600080fd5b506200013062000687565b3480156200019f57600080fd5b50620001aa620006c1565b60405162000171919062001471565b348015620001c657600080fd5b50620001306200080f565b348015620001de57600080fd5b506200016262000a5c565b348015620001f657600080fd5b506200016262000abe565b3480156200020e57600080fd5b506200021962000b20565b60405162000171919062001552565b3480156200023557600080fd5b506200024062000c0a565b60405162000171919062001609565b3480156200025c57600080fd5b506200021962000ce4565b3480156200027457600080fd5b506200024062000dce565b3480156200028c57600080fd5b506200029762000ea8565b604051901515815260200162000171565b348015620002b557600080fd5b506200016262000fdf565b348015620002cd57600080fd5b506200013062001041565b348015620002e557600080fd5b50600754620002979060ff1681565b601c54604051637b97008d60e01b81526001600482018190526001600160a01b0390921691637b97008d91620249f091906024016000604051808303818589803b1580156200034257600080fd5b5088f115801562000357573d6000803e3d6000fd5b5050601c54604051637b97008d60e01b8152600160048201526001600160a01b039091169450637b97008d9350620249f09250600391506024016000604051808303818589803b158015620003ab57600080fd5b5088f1158015620003c0573d6000803e3d6000fd5b5050601c54604051637b97008d60e01b8152600160048201526001600160a01b039091169450637b97008d9350620249f09250600591506024015b6000604051808303818589803b1580156200041557600080fd5b5088f11580156200042a573d6000803e3d6000fd5b5050601c546040516370a0823160e01b8152306004820152620004ad95506001600160a01b0390911693506370a0823192506024019050602060405180830381865afa1580156200047f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004a591906200167a565b6003620011ac565b565b601d8054306001600160a01b031991821617909155601e805482166001908117909155601f80546002931683179055604051909190620004ef90620013ee565b9182526020820152604001604051809103906000f08015801562000517573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b03928316179055601d5460405163c88a5e6d60e01b8152911660048201526103e86024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b1580156200058d57600080fd5b505af1158015620005a2573d6000803e3d6000fd5b5050601e5460405163c88a5e6d60e01b81526001600160a01b0390911660048201526103e86024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d9150604401600060405180830381600087803b1580156200060857600080fd5b505af11580156200061d573d6000803e3d6000fd5b50505050565b606060148054806020026020016040519081016040528092919081815260200182805480156200067d57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116200065e575b5050505050905090565b601c54604051637b97008d60e01b8152600360048201526001600160a01b0390911690637b97008d90620249f090600990602401620003fb565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200080657600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015620007ee5783829060005260206000200180546200075a9062001694565b80601f0160208091040260200160405190810160405280929190818152602001828054620007889062001694565b8015620007d95780601f10620007ad57610100808354040283529160200191620007d9565b820191906000526020600020905b815481529060010190602001808311620007bb57829003601f168201915b50505050508152602001906001019062000738565b505050508152505081526020019060010190620006e5565b50505050905090565b6200081d476103e8620011ac565b601c54604051637b97008d60e01b81526001600482018190526001600160a01b0390921691637b97008d91620249f091906024016000604051808303818589803b1580156200086b57600080fd5b5088f115801562000880573d6000803e3d6000fd5b5050601e5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d945063ca669fa793506024019150620008cd9050565b600060405180830381600087803b158015620008e857600080fd5b505af1158015620008fd573d6000803e3d6000fd5b5050601c54604051637b97008d60e01b8152600160048201526001600160a01b039091169250637b97008d9150620249f0906003906024016000604051808303818589803b1580156200094f57600080fd5b5088f115801562000964573d6000803e3d6000fd5b5050601c54604051636c11bcd360e01b8152600160048201526001600160a01b039091169450636c11bcd3935060240191506200099e9050565b600060405180830381600087803b158015620009b957600080fd5b505af1158015620009ce573d6000803e3d6000fd5b5050601c546040516370a0823160e01b815230600482015262000a4e93506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801562000a20573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a4691906200167a565b6000620011ac565b620004ad476103ea620011ac565b606060168054806020026020016040519081016040528092919081815260200182805480156200067d576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200065e575050505050905090565b606060158054806020026020016040519081016040528092919081815260200182805480156200067d576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200065e575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620008065760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000bf157602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000bb25790505b5050505050815250508152602001906001019062000b44565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156200080657838290600052602060002001805462000c509062001694565b80601f016020809104026020016040519081016040528092919081815260200182805462000c7e9062001694565b801562000ccf5780601f1062000ca35761010080835404028352916020019162000ccf565b820191906000526020600020905b81548152906001019060200180831162000cb157829003601f168201915b50505050508152602001906001019062000c2e565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620008065760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000db557602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000d765790505b5050505050815250508152602001906001019062000d08565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156200080657838290600052602060002001805462000e149062001694565b80601f016020809104026020016040519081016040528092919081815260200182805462000e429062001694565b801562000e935780601f1062000e675761010080835404028352916020019162000e93565b820191906000526020600020905b81548152906001019060200180831162000e7557829003601f168201915b50505050508152602001906001019062000df2565b600754600090610100900460ff161562000ecb5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000fda5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000f5c917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620016d0565b60408051601f198184030181529082905262000f789162001703565b6000604051808303816000865af19150503d806000811462000fb7576040519150601f19603f3d011682016040523d82523d6000602084013e62000fbc565b606091505b509150508080602001905181019062000fd6919062001721565b9150505b919050565b606060138054806020026020016040519081016040528092919081815260200182805480156200067d576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200065e575050505050905090565b6200104f476103e8620011ac565b601c54604051637b97008d60e01b81526001600482018190526001600160a01b0390921691637b97008d91620249f091906024016000604051808303818589803b1580156200109d57600080fd5b5088f1158015620010b2573d6000803e3d6000fd5b5050601c546040516370a0823160e01b81523060048201526200113595506001600160a01b0390911693506370a0823192506024019050602060405180830381865afa15801562001107573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200112d91906200167a565b6001620011ac565b62001143476103e7620011ac565b601c54604051636c11bcd360e01b8152600160048201526001600160a01b0390911690636c11bcd390602401600060405180830381600087803b1580156200118a57600080fd5b505af11580156200119f573d6000803e3d6000fd5b50505050620004ad476103e85b808214620012d7577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200121f9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1620012d7620012db565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620013dd5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620013789291602001620016d0565b60408051601f1981840301815290829052620013949162001703565b6000604051808303816000865af19150503d8060008114620013d3576040519150601f19603f3d011682016040523d82523d6000602084013e620013d8565b606091505b505050505b6007805461ff001916610100179055565b611396806200174d83390190565b6020808252825182820181905260009190848201906040850190845b818110156200143f5783516001600160a01b03168352928401929184019160010162001418565b50909695505050505050565b60005b83811015620014685781810151838201526020016200144e565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200154557603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b818110156200152d57898403605f19018352845180518086526200150d818e88018f85016200144b565b958c0195601f01601f1916949094018b019350918a0191600101620014e3565b50919750505093860193509085019060010162001498565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015620015fa57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620015e45783516001600160e01b0319168252928b019260019290920191908b0190620015b8565b50978a019795505050918701916001016200157a565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200154557878503603f19018452815180518087526200165a818989018a85016200144b565b601f01601f19169590950186019450928501929085019060010162001630565b6000602082840312156200168d57600080fd5b5051919050565b600181811c90821680620016a957607f821691505b602082108103620016ca57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090620016f58160048501602087016200144b565b919091016004019392505050565b60008251620017178184602087016200144b565b9190910192915050565b6000602082840312156200173457600080fd5b815180151581146200174557600080fd5b939250505056fe60c060405262019a286007553480156200001857600080fd5b5060405162001396380380620013968339810160408190526200003b9162000153565b3360405180604001604052806004815260200163109bdb9960e21b815250604051806040016040528060048152602001631093d39160e21b81525081600390816200008791906200021d565b5060046200009682826200021d565b5050506001600160a01b038116620000c857604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000d381620000e3565b5060809190915260a052620002e9565b600680546001600160a01b0319169055620000fe8162000101565b50565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080604083850312156200016757600080fd5b505080516020909101519092909150565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001a357607f821691505b602082108103620001c457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021857600081815260208120601f850160051c81016020861015620001f35750805b601f850160051c820191505b818110156200021457828155600101620001ff565b5050505b505050565b81516001600160401b0381111562000239576200023962000178565b62000251816200024a84546200018e565b84620001ca565b602080601f831160018114620002895760008415620002705750858301515b600019600386901b1c1916600185901b17855562000214565b600085815260208120601f198616915b82811015620002ba5788860151825594840194600190910190840162000299565b5085821015620002d95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a0516110796200031d600039600081816103450152610a050152600081816101f50152610a2e01526110796000f3fe6080604052600436106101405760003560e01c8063715018a6116100b657806395d89b411161006f57806395d89b4114610399578063a9059cbb146103ae578063d2fa635e146103ce578063dd62ed3e146103ee578063e30c397814610434578063f2fde38b1461045257600080fd5b8063715018a6146102d657806379ba5097146102eb5780637b97008d146103005780637d57b5601461031357806383caf275146103335780638da5cb5b1461036757600080fd5b806323b872dd1161010857806323b872dd1461021757806324600fc314610237578063313ce5671461024e5780633de39c111461026a5780636c11bcd31461028057806370a08231146102a057600080fd5b806306fdde0314610145578063095ea7b314610170578063145f1019146101a057806318160ddd146101ce5780631d0806ae146101e3575b600080fd5b34801561015157600080fd5b5061015a610472565b6040516101679190610e5d565b60405180910390f35b34801561017c57600080fd5b5061019061018b366004610ec7565b610504565b6040519015158152602001610167565b3480156101ac57600080fd5b506101c06101bb366004610ef1565b61051e565b604051908152602001610167565b3480156101da57600080fd5b506002546101c0565b3480156101ef57600080fd5b506101c07f000000000000000000000000000000000000000000000000000000000000000081565b34801561022357600080fd5b50610190610232366004610f0a565b610550565b34801561024357600080fd5b5061024c610574565b005b34801561025a57600080fd5b5060405160128152602001610167565b34801561027657600080fd5b506101c060075481565b34801561028c57600080fd5b5061024c61029b366004610ef1565b61062a565b3480156102ac57600080fd5b506101c06102bb366004610f46565b6001600160a01b031660009081526020819052604090205490565b3480156102e257600080fd5b5061024c610762565b3480156102f757600080fd5b5061024c610776565b61024c61030e366004610ef1565b6107b7565b34801561031f57600080fd5b506101c061032e366004610ef1565b6108f2565b34801561033f57600080fd5b506101c07f000000000000000000000000000000000000000000000000000000000000000081565b34801561037357600080fd5b506005546001600160a01b03165b6040516001600160a01b039091168152602001610167565b3480156103a557600080fd5b5061015a61091d565b3480156103ba57600080fd5b506101906103c9366004610ec7565b61092c565b3480156103da57600080fd5b5061024c6103e9366004610ef1565b61093a565b3480156103fa57600080fd5b506101c0610409366004610f61565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561044057600080fd5b506006546001600160a01b0316610381565b34801561045e57600080fd5b5061024c61046d366004610f46565b610947565b60606003805461048190610f94565b80601f01602080910402602001604051908101604052809291908181526020018280546104ad90610f94565b80156104fa5780601f106104cf576101008083540402835291602001916104fa565b820191906000526020600020905b8154815290600101906020018083116104dd57829003601f168201915b5050505050905090565b6000336105128185856109b8565b60019150505b92915050565b6000808261052b60025490565b6105359190610fe4565b905061054961054360025490565b826109ca565b9392505050565b60003361055e858285610a79565b610569858585610af7565b506001949350505050565b61057c610b56565b60006105906005546001600160a01b031690565b6001600160a01b03164760405160006040518083038185875af1925050503d80600081146105da576040519150601f19603f3d011682016040523d82523d6000602084013e6105df565b606091505b50509050806106275760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064015b60405180910390fd5b50565b600081116106715760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081d1bdad95b88185b5bdd5b9d60621b604482015260640161061e565b600061067c826108f2565b90506106883383610b83565b604051600090339083908381818185875af1925050503d80600081146106ca576040519150601f19603f3d011682016040523d82523d6000602084013e6106cf565b606091505b50509050806107125760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161061e565b337f6db63bebf1e6540277744df32846ebdb98385b1a73f2d5de49b28348add63f50848461073f60025490565b6040805193845260208401929092529082015260600160405180910390a2505050565b61076a610b56565b6107746000610bbd565b565b60065433906001600160a01b031681146107ae5760405163118cdaa760e01b81526001600160a01b038216600482015260240161061e565b61062781610bbd565b6007543a11156107fe5760405162461bcd60e51b815260206004820152601260248201527111d85cc81c1c9a58d948195e18d95959195960721b604482015260640161061e565b600081116108455760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081d1bdad95b88185b5bdd5b9d60621b604482015260640161061e565b60006108508261051e565b9050803410156108995760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b604482015260640161061e565b6108a33383610bd6565b337f0d1a0d5e3d583a0e92588799dd06e50fd78c07daf05f0cc06d7b848b1ca445f183836108d060025490565b6040805193845260208401929092529082015260600160405180910390a25050565b600080826108ff60025490565b6109099190610ff7565b90506105498161091860025490565b6109ca565b60606004805461048190610f94565b600033610512818585610af7565b610942610b56565b600755565b61094f610b56565b600680546001600160a01b0383166001600160a01b031990911681179091556109806005546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6109c58383836001610c0c565b505050565b60008183036109db57506000610518565b600060026109e98585610ff7565b60016109f58688610fe4565b6109ff9190610ff7565b610a29907f000000000000000000000000000000000000000000000000000000000000000061100a565b610a537f000000000000000000000000000000000000000000000000000000000000000080610fe4565b610a5d9190610fe4565b610a67919061100a565b610a719190611021565b949350505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610af15781811015610ae257604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161061e565b610af184848484036000610c0c565b50505050565b6001600160a01b038316610b2157604051634b637e8f60e11b81526000600482015260240161061e565b6001600160a01b038216610b4b5760405163ec442f0560e01b81526000600482015260240161061e565b6109c5838383610ce1565b6005546001600160a01b031633146107745760405163118cdaa760e01b815233600482015260240161061e565b6001600160a01b038216610bad57604051634b637e8f60e11b81526000600482015260240161061e565b610bb982600083610ce1565b5050565b600680546001600160a01b031916905561062781610e0b565b6001600160a01b038216610c005760405163ec442f0560e01b81526000600482015260240161061e565b610bb960008383610ce1565b6001600160a01b038416610c365760405163e602df0560e01b81526000600482015260240161061e565b6001600160a01b038316610c6057604051634a1406b160e11b81526000600482015260240161061e565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610af157826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610cd391815260200190565b60405180910390a350505050565b6001600160a01b038316610d0c578060026000828254610d019190610fe4565b90915550610d7e9050565b6001600160a01b03831660009081526020819052604090205481811015610d5f5760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161061e565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610d9a57600280548290039055610db9565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610dfe91815260200190565b60405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610e8a57858101830151858201604001528201610e6e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610ec257600080fd5b919050565b60008060408385031215610eda57600080fd5b610ee383610eab565b946020939093013593505050565b600060208284031215610f0357600080fd5b5035919050565b600080600060608486031215610f1f57600080fd5b610f2884610eab565b9250610f3660208501610eab565b9150604084013590509250925092565b600060208284031215610f5857600080fd5b61054982610eab565b60008060408385031215610f7457600080fd5b610f7d83610eab565b9150610f8b60208401610eab565b90509250929050565b600181811c90821680610fa857607f821691505b602082108103610fc857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561051857610518610fce565b8181038181111561051857610518610fce565b808202811582820484141761051857610518610fce565b60008261103e57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212206ce83f85492dcb5385c62712ce1097d8b4d8bd85e802f5fb82bc3104c9343daf64736f6c63430008150033a26469706673582212201a2ea789b768e2e228add2183695f8d605ac19af3850ffc3e309e1f64aa726dd64736f6c63430008150033",
    "sourceMap": "171:1697:26:-:0;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3126:44:3;;;;;;;;;;;171:1697:26;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106200010b5760003560e01c806366d9a9a01162000095578063ba414fa61162000060578063ba414fa6146200027f578063e20c9f7114620002a8578063e816c59e14620002c0578063fa7626d414620002d857600080fd5b806366d9a9a0146200020157806385226c811462000228578063916a17c6146200024f578063b5508aa9146200026757600080fd5b80632ade388011620000d65780632ade3880146200019257806331c42ca614620001b95780633e5e3c2314620001d15780633f7286f414620001e957600080fd5b8063024b85d814620001185780630a9254e414620001325780631ed7831c146200014a57806323d6213c146200017a57600080fd5b366200011357005b600080fd5b3480156200012557600080fd5b5062000130620002f4565b005b3480156200013f57600080fd5b5062000130620004af565b3480156200015757600080fd5b506200016262000623565b604051620001719190620013fc565b60405180910390f35b3480156200018757600080fd5b506200013062000687565b3480156200019f57600080fd5b50620001aa620006c1565b60405162000171919062001471565b348015620001c657600080fd5b50620001306200080f565b348015620001de57600080fd5b506200016262000a5c565b348015620001f657600080fd5b506200016262000abe565b3480156200020e57600080fd5b506200021962000b20565b60405162000171919062001552565b3480156200023557600080fd5b506200024062000c0a565b60405162000171919062001609565b3480156200025c57600080fd5b506200021962000ce4565b3480156200027457600080fd5b506200024062000dce565b3480156200028c57600080fd5b506200029762000ea8565b604051901515815260200162000171565b348015620002b557600080fd5b506200016262000fdf565b348015620002cd57600080fd5b506200013062001041565b348015620002e557600080fd5b50600754620002979060ff1681565b601c54604051637b97008d60e01b81526001600482018190526001600160a01b0390921691637b97008d91620249f091906024016000604051808303818589803b1580156200034257600080fd5b5088f115801562000357573d6000803e3d6000fd5b5050601c54604051637b97008d60e01b8152600160048201526001600160a01b039091169450637b97008d9350620249f09250600391506024016000604051808303818589803b158015620003ab57600080fd5b5088f1158015620003c0573d6000803e3d6000fd5b5050601c54604051637b97008d60e01b8152600160048201526001600160a01b039091169450637b97008d9350620249f09250600591506024015b6000604051808303818589803b1580156200041557600080fd5b5088f11580156200042a573d6000803e3d6000fd5b5050601c546040516370a0823160e01b8152306004820152620004ad95506001600160a01b0390911693506370a0823192506024019050602060405180830381865afa1580156200047f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004a591906200167a565b6003620011ac565b565b601d8054306001600160a01b031991821617909155601e805482166001908117909155601f80546002931683179055604051909190620004ef90620013ee565b9182526020820152604001604051809103906000f08015801562000517573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b03928316179055601d5460405163c88a5e6d60e01b8152911660048201526103e86024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b1580156200058d57600080fd5b505af1158015620005a2573d6000803e3d6000fd5b5050601e5460405163c88a5e6d60e01b81526001600160a01b0390911660048201526103e86024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d9150604401600060405180830381600087803b1580156200060857600080fd5b505af11580156200061d573d6000803e3d6000fd5b50505050565b606060148054806020026020016040519081016040528092919081815260200182805480156200067d57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116200065e575b5050505050905090565b601c54604051637b97008d60e01b8152600360048201526001600160a01b0390911690637b97008d90620249f090600990602401620003fb565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200080657600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015620007ee5783829060005260206000200180546200075a9062001694565b80601f0160208091040260200160405190810160405280929190818152602001828054620007889062001694565b8015620007d95780601f10620007ad57610100808354040283529160200191620007d9565b820191906000526020600020905b815481529060010190602001808311620007bb57829003601f168201915b50505050508152602001906001019062000738565b505050508152505081526020019060010190620006e5565b50505050905090565b6200081d476103e8620011ac565b601c54604051637b97008d60e01b81526001600482018190526001600160a01b0390921691637b97008d91620249f091906024016000604051808303818589803b1580156200086b57600080fd5b5088f115801562000880573d6000803e3d6000fd5b5050601e5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d945063ca669fa793506024019150620008cd9050565b600060405180830381600087803b158015620008e857600080fd5b505af1158015620008fd573d6000803e3d6000fd5b5050601c54604051637b97008d60e01b8152600160048201526001600160a01b039091169250637b97008d9150620249f0906003906024016000604051808303818589803b1580156200094f57600080fd5b5088f115801562000964573d6000803e3d6000fd5b5050601c54604051636c11bcd360e01b8152600160048201526001600160a01b039091169450636c11bcd3935060240191506200099e9050565b600060405180830381600087803b158015620009b957600080fd5b505af1158015620009ce573d6000803e3d6000fd5b5050601c546040516370a0823160e01b815230600482015262000a4e93506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801562000a20573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a4691906200167a565b6000620011ac565b620004ad476103ea620011ac565b606060168054806020026020016040519081016040528092919081815260200182805480156200067d576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200065e575050505050905090565b606060158054806020026020016040519081016040528092919081815260200182805480156200067d576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200065e575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620008065760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000bf157602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000bb25790505b5050505050815250508152602001906001019062000b44565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156200080657838290600052602060002001805462000c509062001694565b80601f016020809104026020016040519081016040528092919081815260200182805462000c7e9062001694565b801562000ccf5780601f1062000ca35761010080835404028352916020019162000ccf565b820191906000526020600020905b81548152906001019060200180831162000cb157829003601f168201915b50505050508152602001906001019062000c2e565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620008065760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000db557602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000d765790505b5050505050815250508152602001906001019062000d08565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156200080657838290600052602060002001805462000e149062001694565b80601f016020809104026020016040519081016040528092919081815260200182805462000e429062001694565b801562000e935780601f1062000e675761010080835404028352916020019162000e93565b820191906000526020600020905b81548152906001019060200180831162000e7557829003601f168201915b50505050508152602001906001019062000df2565b600754600090610100900460ff161562000ecb5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000fda5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000f5c917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620016d0565b60408051601f198184030181529082905262000f789162001703565b6000604051808303816000865af19150503d806000811462000fb7576040519150601f19603f3d011682016040523d82523d6000602084013e62000fbc565b606091505b509150508080602001905181019062000fd6919062001721565b9150505b919050565b606060138054806020026020016040519081016040528092919081815260200182805480156200067d576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200065e575050505050905090565b6200104f476103e8620011ac565b601c54604051637b97008d60e01b81526001600482018190526001600160a01b0390921691637b97008d91620249f091906024016000604051808303818589803b1580156200109d57600080fd5b5088f1158015620010b2573d6000803e3d6000fd5b5050601c546040516370a0823160e01b81523060048201526200113595506001600160a01b0390911693506370a0823192506024019050602060405180830381865afa15801562001107573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200112d91906200167a565b6001620011ac565b62001143476103e7620011ac565b601c54604051636c11bcd360e01b8152600160048201526001600160a01b0390911690636c11bcd390602401600060405180830381600087803b1580156200118a57600080fd5b505af11580156200119f573d6000803e3d6000fd5b50505050620004ad476103e85b808214620012d7577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200121f9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1620012d7620012db565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620013dd5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620013789291602001620016d0565b60408051601f1981840301815290829052620013949162001703565b6000604051808303816000865af19150503d8060008114620013d3576040519150601f19603f3d011682016040523d82523d6000602084013e620013d8565b606091505b505050505b6007805461ff001916610100179055565b611396806200174d83390190565b6020808252825182820181905260009190848201906040850190845b818110156200143f5783516001600160a01b03168352928401929184019160010162001418565b50909695505050505050565b60005b83811015620014685781810151838201526020016200144e565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200154557603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b818110156200152d57898403605f19018352845180518086526200150d818e88018f85016200144b565b958c0195601f01601f1916949094018b019350918a0191600101620014e3565b50919750505093860193509085019060010162001498565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015620015fa57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620015e45783516001600160e01b0319168252928b019260019290920191908b0190620015b8565b50978a019795505050918701916001016200157a565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200154557878503603f19018452815180518087526200165a818989018a85016200144b565b601f01601f19169590950186019450928501929085019060010162001630565b6000602082840312156200168d57600080fd5b5051919050565b600181811c90821680620016a957607f821691505b602082108103620016ca57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090620016f58160048501602087016200144b565b919091016004019392505050565b60008251620017178184602087016200144b565b9190910192915050565b6000602082840312156200173457600080fd5b815180151581146200174557600080fd5b939250505056fe60c060405262019a286007553480156200001857600080fd5b5060405162001396380380620013968339810160408190526200003b9162000153565b3360405180604001604052806004815260200163109bdb9960e21b815250604051806040016040528060048152602001631093d39160e21b81525081600390816200008791906200021d565b5060046200009682826200021d565b5050506001600160a01b038116620000c857604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000d381620000e3565b5060809190915260a052620002e9565b600680546001600160a01b0319169055620000fe8162000101565b50565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080604083850312156200016757600080fd5b505080516020909101519092909150565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001a357607f821691505b602082108103620001c457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021857600081815260208120601f850160051c81016020861015620001f35750805b601f850160051c820191505b818110156200021457828155600101620001ff565b5050505b505050565b81516001600160401b0381111562000239576200023962000178565b62000251816200024a84546200018e565b84620001ca565b602080601f831160018114620002895760008415620002705750858301515b600019600386901b1c1916600185901b17855562000214565b600085815260208120601f198616915b82811015620002ba5788860151825594840194600190910190840162000299565b5085821015620002d95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a0516110796200031d600039600081816103450152610a050152600081816101f50152610a2e01526110796000f3fe6080604052600436106101405760003560e01c8063715018a6116100b657806395d89b411161006f57806395d89b4114610399578063a9059cbb146103ae578063d2fa635e146103ce578063dd62ed3e146103ee578063e30c397814610434578063f2fde38b1461045257600080fd5b8063715018a6146102d657806379ba5097146102eb5780637b97008d146103005780637d57b5601461031357806383caf275146103335780638da5cb5b1461036757600080fd5b806323b872dd1161010857806323b872dd1461021757806324600fc314610237578063313ce5671461024e5780633de39c111461026a5780636c11bcd31461028057806370a08231146102a057600080fd5b806306fdde0314610145578063095ea7b314610170578063145f1019146101a057806318160ddd146101ce5780631d0806ae146101e3575b600080fd5b34801561015157600080fd5b5061015a610472565b6040516101679190610e5d565b60405180910390f35b34801561017c57600080fd5b5061019061018b366004610ec7565b610504565b6040519015158152602001610167565b3480156101ac57600080fd5b506101c06101bb366004610ef1565b61051e565b604051908152602001610167565b3480156101da57600080fd5b506002546101c0565b3480156101ef57600080fd5b506101c07f000000000000000000000000000000000000000000000000000000000000000081565b34801561022357600080fd5b50610190610232366004610f0a565b610550565b34801561024357600080fd5b5061024c610574565b005b34801561025a57600080fd5b5060405160128152602001610167565b34801561027657600080fd5b506101c060075481565b34801561028c57600080fd5b5061024c61029b366004610ef1565b61062a565b3480156102ac57600080fd5b506101c06102bb366004610f46565b6001600160a01b031660009081526020819052604090205490565b3480156102e257600080fd5b5061024c610762565b3480156102f757600080fd5b5061024c610776565b61024c61030e366004610ef1565b6107b7565b34801561031f57600080fd5b506101c061032e366004610ef1565b6108f2565b34801561033f57600080fd5b506101c07f000000000000000000000000000000000000000000000000000000000000000081565b34801561037357600080fd5b506005546001600160a01b03165b6040516001600160a01b039091168152602001610167565b3480156103a557600080fd5b5061015a61091d565b3480156103ba57600080fd5b506101906103c9366004610ec7565b61092c565b3480156103da57600080fd5b5061024c6103e9366004610ef1565b61093a565b3480156103fa57600080fd5b506101c0610409366004610f61565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561044057600080fd5b506006546001600160a01b0316610381565b34801561045e57600080fd5b5061024c61046d366004610f46565b610947565b60606003805461048190610f94565b80601f01602080910402602001604051908101604052809291908181526020018280546104ad90610f94565b80156104fa5780601f106104cf576101008083540402835291602001916104fa565b820191906000526020600020905b8154815290600101906020018083116104dd57829003601f168201915b5050505050905090565b6000336105128185856109b8565b60019150505b92915050565b6000808261052b60025490565b6105359190610fe4565b905061054961054360025490565b826109ca565b9392505050565b60003361055e858285610a79565b610569858585610af7565b506001949350505050565b61057c610b56565b60006105906005546001600160a01b031690565b6001600160a01b03164760405160006040518083038185875af1925050503d80600081146105da576040519150601f19603f3d011682016040523d82523d6000602084013e6105df565b606091505b50509050806106275760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064015b60405180910390fd5b50565b600081116106715760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081d1bdad95b88185b5bdd5b9d60621b604482015260640161061e565b600061067c826108f2565b90506106883383610b83565b604051600090339083908381818185875af1925050503d80600081146106ca576040519150601f19603f3d011682016040523d82523d6000602084013e6106cf565b606091505b50509050806107125760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161061e565b337f6db63bebf1e6540277744df32846ebdb98385b1a73f2d5de49b28348add63f50848461073f60025490565b6040805193845260208401929092529082015260600160405180910390a2505050565b61076a610b56565b6107746000610bbd565b565b60065433906001600160a01b031681146107ae5760405163118cdaa760e01b81526001600160a01b038216600482015260240161061e565b61062781610bbd565b6007543a11156107fe5760405162461bcd60e51b815260206004820152601260248201527111d85cc81c1c9a58d948195e18d95959195960721b604482015260640161061e565b600081116108455760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081d1bdad95b88185b5bdd5b9d60621b604482015260640161061e565b60006108508261051e565b9050803410156108995760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b604482015260640161061e565b6108a33383610bd6565b337f0d1a0d5e3d583a0e92588799dd06e50fd78c07daf05f0cc06d7b848b1ca445f183836108d060025490565b6040805193845260208401929092529082015260600160405180910390a25050565b600080826108ff60025490565b6109099190610ff7565b90506105498161091860025490565b6109ca565b60606004805461048190610f94565b600033610512818585610af7565b610942610b56565b600755565b61094f610b56565b600680546001600160a01b0383166001600160a01b031990911681179091556109806005546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6109c58383836001610c0c565b505050565b60008183036109db57506000610518565b600060026109e98585610ff7565b60016109f58688610fe4565b6109ff9190610ff7565b610a29907f000000000000000000000000000000000000000000000000000000000000000061100a565b610a537f000000000000000000000000000000000000000000000000000000000000000080610fe4565b610a5d9190610fe4565b610a67919061100a565b610a719190611021565b949350505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610af15781811015610ae257604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161061e565b610af184848484036000610c0c565b50505050565b6001600160a01b038316610b2157604051634b637e8f60e11b81526000600482015260240161061e565b6001600160a01b038216610b4b5760405163ec442f0560e01b81526000600482015260240161061e565b6109c5838383610ce1565b6005546001600160a01b031633146107745760405163118cdaa760e01b815233600482015260240161061e565b6001600160a01b038216610bad57604051634b637e8f60e11b81526000600482015260240161061e565b610bb982600083610ce1565b5050565b600680546001600160a01b031916905561062781610e0b565b6001600160a01b038216610c005760405163ec442f0560e01b81526000600482015260240161061e565b610bb960008383610ce1565b6001600160a01b038416610c365760405163e602df0560e01b81526000600482015260240161061e565b6001600160a01b038316610c6057604051634a1406b160e11b81526000600482015260240161061e565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610af157826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610cd391815260200190565b60405180910390a350505050565b6001600160a01b038316610d0c578060026000828254610d019190610fe4565b90915550610d7e9050565b6001600160a01b03831660009081526020819052604090205481811015610d5f5760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161061e565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610d9a57600280548290039055610db9565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610dfe91815260200190565b60405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610e8a57858101830151858201604001528201610e6e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610ec257600080fd5b919050565b60008060408385031215610eda57600080fd5b610ee383610eab565b946020939093013593505050565b600060208284031215610f0357600080fd5b5035919050565b600080600060608486031215610f1f57600080fd5b610f2884610eab565b9250610f3660208501610eab565b9150604084013590509250925092565b600060208284031215610f5857600080fd5b61054982610eab565b60008060408385031215610f7457600080fd5b610f7d83610eab565b9150610f8b60208401610eab565b90509250929050565b600181811c90821680610fa857607f821691505b602082108103610fc857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561051857610518610fce565b8181038181111561051857610518610fce565b808202811582820484141761051857610518610fce565b60008261103e57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212206ce83f85492dcb5385c62712ce1097d8b4d8bd85e802f5fb82bc3104c9343daf64736f6c63430008150033a26469706673582212201a2ea789b768e2e228add2183695f8d605ac19af3850ffc3e309e1f64aa726dd64736f6c63430008150033",
    "sourceMap": "171:1697:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1189:258;;;;;;;;;;;;;:::i;:::-;;292:222;;;;;;;;;;;;;:::i;2452:134:6:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;980:145:26;;;;;;;;;;;;;:::i;3360:151:6:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1453:412:26:-;;;;;;;;;;;;;:::i;3221:133:6:-;;;;;;;;;;;;;:::i;2922:141::-;;;;;;;;;;;;;:::i;2738:178::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2592:140::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3069:146::-;;;;;;;;;;;;;:::i;2157:141::-;;;;;;;;;;;;;:::i;1819:584:0:-;;;;;;;;;;;;;:::i;:::-;;;5592:14:27;;5585:22;5567:41;;5555:2;5540:18;1819:584:0;5427:187:27;2304:142:6;;;;;;;;;;;;;:::i;555:361:26:-;;;;;;;;;;;;;:::i;1572:26:0:-;;;;;;;;;;-1:-1:-1;1572:26:0;;;;;;;;1189:258:26;1233:4;;:45;;-1:-1:-1;;;1233:45:26;;:4;:45;;;5773:25:27;;;-1:-1:-1;;;;;1233:4:26;;;;:19;;1268:6;;1233:4;5746:18:27;;1233:45:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1288:4:26;;:45;;-1:-1:-1;;;1288:45:26;;:4;:45;;;5773:25:27;-1:-1:-1;;;;;1288:4:26;;;;-1:-1:-1;1288:19:26;;-1:-1:-1;1323:6:26;;-1:-1:-1;1315:1:26;;-1:-1:-1;5746:18:27;;1288:45:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1343:4:26;;:45;;-1:-1:-1;;;1343:45:26;;:4;:45;;;5773:25:27;-1:-1:-1;;;;;1343:4:26;;;;-1:-1:-1;1343:19:26;;-1:-1:-1;1378:6:26;;-1:-1:-1;1370:1:26;;-1:-1:-1;5746:18:27;;1343:45:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1407:4:26;;:29;;-1:-1:-1;;;1407:29:26;;1430:4;1407:29;;;5955:51:27;1398:42:26;;-1:-1:-1;;;;;;1407:4:26;;;;-1:-1:-1;1407:14:26;;-1:-1:-1;5928:18:27;;;-1:-1:-1;1407:29:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1438:1;1398:8;:42::i;:::-;1189:258::o;292:222::-;326:5;:21;;342:4;-1:-1:-1;;;;;;326:21:26;;;;;;;357:5;:20;;;;-1:-1:-1;357:20:26;;;;;;387:5;:20;;403:3;387:20;;;;;;424:22;;-1:-1:-1;;403:3:26;424:22;;;:::i;:::-;6396:25:27;;;6452:2;6437:18;;6430:34;6384:2;6369:18;424:22:26;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;417:4:26;:29;;-1:-1:-1;;;;;;417:29:26;-1:-1:-1;;;;;417:29:26;;;;;;465:5;;457:20;;-1:-1:-1;;;457:20:26;;465:5;;457:20;;;6660:51:27;472:4:26;6727:18:27;;;6720:34;457:7:26;;;;6633:18:27;;457:20:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;495:5:26;;487:20;;-1:-1:-1;;;487:20:26;;-1:-1:-1;;;;;495:5:26;;;487:20;;;6660:51:27;502:4:26;6727:18:27;;;6720:34;487:7:26;;-1:-1:-1;487:7:26;;-1:-1:-1;6633:18:27;;487:20:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;292:222::o;2452:134:6:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:6;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;980:145:26:-;1021:4;;:45;;-1:-1:-1;;;1021:45:26;;1064:1;1021:45;;;5773:25:27;-1:-1:-1;;;;;1021:4:26;;;;:19;;1056:6;;1048:1;;5746:18:27;;1021:45:26;5619:185:27;3360:151:6;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;1453:412:26:-;1490:37;1499:21;1522:4;1490:8;:37::i;:::-;1538:4;;:45;;-1:-1:-1;;;1538:45:26;;:4;:45;;;5773:25:27;;;-1:-1:-1;;;;;1538:4:26;;;;:19;;1573:6;;1538:4;5746:18:27;;1538:45:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1602:5:26;;1593:15;;-1:-1:-1;;;1593:15:26;;-1:-1:-1;;;;;1602:5:26;;;1593:15;;;5955:51:27;1593:8:26;;-1:-1:-1;1593:8:26;;-1:-1:-1;5928:18:27;;;-1:-1:-1;1593:15:26;;-1:-1:-1;5809:203:27;1593:15:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1618:4:26;;:45;;-1:-1:-1;;;1618:45:26;;:4;:45;;;5773:25:27;-1:-1:-1;;;;;1618:4:26;;;;-1:-1:-1;1618:19:26;;-1:-1:-1;1653:6:26;;1645:1;;5746:18:27;;1618:45:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1741:4:26;;:18;;-1:-1:-1;;;1741:18:26;;:4;:18;;;5773:25:27;-1:-1:-1;;;;;1741:4:26;;;;-1:-1:-1;1741:15:26;;-1:-1:-1;5746:18:27;;;-1:-1:-1;1741:18:26;;-1:-1:-1;5619:185:27;1741:18:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1778:4:26;;:29;;-1:-1:-1;;;1778:29:26;;1801:4;1778:29;;;5955:51:27;1769:42:26;;-1:-1:-1;;;;;;1778:4:26;;;;-1:-1:-1;1778:14:26;;5928:18:27;;1778:29:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1809:1;1769:8;:42::i;:::-;1821:37;1830:21;1853:4;1821:8;:37::i;3221:133:6:-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:6;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:6;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;2738:178::-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2592:140;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3069:146;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2157:141;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;6660:51:27;;;-1:-1:-1;;;6727:18:27;;;6720:34;2196:43:0;;;;;;;;;6633:18:27;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;2304:142:6:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:6;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;555:361:26:-;601:37;610:21;633:4;601:8;:37::i;:::-;649:4;;:45;;-1:-1:-1;;;649:45:26;;:4;:45;;;5773:25:27;;;-1:-1:-1;;;;;649:4:26;;;;:19;;684:6;;649:4;5746:18:27;;649:45:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;713:4:26;;:29;;-1:-1:-1;;;713:29:26;;736:4;713:29;;;5955:51:27;704:42:26;;-1:-1:-1;;;;;;713:4:26;;;;-1:-1:-1;713:14:26;;-1:-1:-1;5928:18:27;;;-1:-1:-1;713:29:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;744:1;704:8;:42::i;:::-;756:36;765:21;788:3;756:8;:36::i;:::-;844:4;;:18;;-1:-1:-1;;;844:18:26;;:4;:18;;;5773:25:27;-1:-1:-1;;;;;844:4:26;;;;:15;;5746:18:27;;844::26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;872:37;881:21;904:4;5209:262:0;5271:1;5266;:6;5262:203;;5293:41;;;;;8784:2:27;8766:21;;;8823:2;8803:18;;;8796:30;8862:34;8857:2;8842:18;;8835:62;-1:-1:-1;;;8928:2:27;8913:18;;8906:32;8970:3;8955:19;;8582:398;5293:41:0;;;;;;;;5353:31;;;9197:21:27;;;9254:2;9234:18;;;9227:30;-1:-1:-1;;;9288:2:27;9273:18;;9266:40;9373:4;9358:20;;9351:36;;;5353:31:0;;;;;;;9338:3:27;5353:31:0;;;5403;;;9610:21:27;;;9667:2;9647:18;;;9640:30;-1:-1:-1;;;9701:2:27;9686:18;;9679:40;9786:4;9771:20;;9764:36;;;5403:31:0;;;;;;;9751:3:27;5403:31:0;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;2409:432::-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;10013:51:27;;;-1:-1:-1;;;10080:18:27;;;10073:34;;;;2712:4:0;10123:18:27;;;10116:34;2489:11:0;;1671:64;2586:43;;9986:18:27;;2652:67:0;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;14:658:27:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:27;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:27;;14:658;-1:-1:-1;;;;;;14:658:27:o;677:250::-;762:1;772:113;786:6;783:1;780:13;772:113;;;862:11;;;856:18;843:11;;;836:39;808:2;801:10;772:113;;;-1:-1:-1;;919:1:27;901:16;;894:27;677:250::o;932:1899::-;1136:4;1165:2;1205;1194:9;1190:18;1235:2;1224:9;1217:21;1258:6;1293;1287:13;1324:6;1316;1309:22;1362:2;1351:9;1347:18;1340:25;;1424:2;1414:6;1411:1;1407:14;1396:9;1392:30;1388:39;1374:53;;1462:2;1454:6;1450:15;1483:1;1493:1309;1507:6;1504:1;1501:13;1493:1309;;;-1:-1:-1;;1572:22:27;;;1568:36;1556:49;;1628:13;;1715:9;;-1:-1:-1;;;;;1711:35:27;1696:51;;1786:11;;1780:18;1680:2;1818:15;;;1811:27;;;1899:19;;1668:15;;;1931:24;;;2111:21;;;;1978:2;2064:1;2060:16;;;2048:29;;2044:38;;;2002:15;;;;2156:1;2170:523;2186:8;2181:3;2178:17;2170:523;;;2267:19;;;-1:-1:-1;;2263:33:27;2249:48;;2324:15;;2372:9;;2398:24;;;2439:74;2372:9;2487:15;;;2474:11;;;2439:74;:::i;:::-;2622:17;;;;2583:2;2560:17;-1:-1:-1;;2556:31:27;2544:44;;;;2540:53;;;-1:-1:-1;2665:14:27;;;;2214:1;2205:11;2170:523;;;-1:-1:-1;2716:6:27;;-1:-1:-1;;;2780:12:27;;;;-1:-1:-1;2745:15:27;;;;1529:1;1522:9;1493:1309;;;-1:-1:-1;2819:6:27;;932:1899;-1:-1:-1;;;;;;;932:1899:27:o;2836:1567::-;3038:4;3067:2;3107;3096:9;3092:18;3137:2;3126:9;3119:21;3160:6;3195;3189:13;3226:6;3218;3211:22;3252:2;3242:12;;3285:2;3274:9;3270:18;3263:25;;3347:2;3337:6;3334:1;3330:14;3319:9;3315:30;3311:39;3385:2;3377:6;3373:15;3406:1;3427;3437:937;3453:6;3448:3;3445:15;3437:937;;;3522:22;;;-1:-1:-1;;3518:36:27;3506:49;;3578:13;;3665:9;;-1:-1:-1;;;;;3661:35:27;3646:51;;3736:11;;3730:18;3768:15;;;3761:27;;;3849:19;;3618:15;;;3881:24;;;3971:21;;;;4016:1;;3939:2;3927:15;;;4030:236;4046:8;4041:3;4038:17;4030:236;;;4127:15;;-1:-1:-1;;;;;;4123:42:27;4109:57;;4235:17;;;;4074:1;4065:11;;;;;4192:14;;;;4030:236;;;-1:-1:-1;4352:12:27;;;;4289:5;-1:-1:-1;;;4317:15:27;;;;3479:1;3470:11;3437:937;;;-1:-1:-1;4391:6:27;;2836:1567;-1:-1:-1;;;;;;;;;2836:1567:27:o;4408:1014::-;4570:4;4599:2;4639;4628:9;4624:18;4669:2;4658:9;4651:21;4692:6;4727;4721:13;4758:6;4750;4743:22;4796:2;4785:9;4781:18;4774:25;;4858:2;4848:6;4845:1;4841:14;4830:9;4826:30;4822:39;4808:53;;4896:2;4888:6;4884:15;4917:1;4927:466;4941:6;4938:1;4935:13;4927:466;;;5006:22;;;-1:-1:-1;;5002:36:27;4990:49;;5062:13;;5104:9;;5126:24;;;5163:74;5104:9;5211:15;;;5198:11;;;5163:74;:::i;:::-;5303:2;5280:17;-1:-1:-1;;5276:31:27;5264:44;;;;5260:53;;;-1:-1:-1;5371:12:27;;;;5336:15;;;;4963:1;4956:9;4927:466;;6017:184;6087:6;6140:2;6128:9;6119:7;6115:23;6111:32;6108:52;;;6156:1;6153;6146:12;6108:52;-1:-1:-1;6179:16:27;;6017:184;-1:-1:-1;6017:184:27:o;6955:380::-;7034:1;7030:12;;;;7077;;;7098:61;;7152:4;7144:6;7140:17;7130:27;;7098:61;7205:2;7197:6;7194:14;7174:18;7171:38;7168:161;;7251:10;7246:3;7242:20;7239:1;7232:31;7286:4;7283:1;7276:15;7314:4;7311:1;7304:15;7168:161;;6955:380;;;:::o;7619:384::-;-1:-1:-1;;;;;;7804:33:27;;7792:46;;7861:13;;7774:3;;7883:74;7861:13;7946:1;7937:11;;7930:4;7918:17;;7883:74;:::i;:::-;7977:16;;;;7995:1;7973:24;;7619:384;-1:-1:-1;;;7619:384:27:o;8008:287::-;8137:3;8175:6;8169:13;8191:66;8250:6;8245:3;8238:4;8230:6;8226:17;8191:66;:::i;:::-;8273:16;;;;;8008:287;-1:-1:-1;;8008:287:27:o;8300:277::-;8367:6;8420:2;8408:9;8399:7;8395:23;8391:32;8388:52;;;8436:1;8433;8426:12;8388:52;8468:9;8462:16;8521:5;8514:13;8507:21;8500:5;8497:32;8487:60;;8543:1;8540;8533:12;8487:60;8566:5;8300:277;-1:-1:-1;;;8300:277:27:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testBuyAndSellOne()": "e816c59e",
    "testBuyMultiple()": "024b85d8",
    "testBuyThree()": "23d6213c",
    "testSell()": "31c42ca6"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBuyAndSellOne\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBuyMultiple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBuyThree\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"testBuyMultiple()\":{\"notice\":\"make sure price increases with each token\"},\"testBuyThree()\":{\"notice\":\"make sure price increases with each token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/BondingCurve.t.sol\":\"BondingCurveTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1\",\"dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e\",\"dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155\",\"dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0x5d3e5de9eadfa1f8a892eb2e95bbebd3e4b8c8ada5b76f104d383fea518fa688\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cde108962511e6a4d3cfb7b6fb6a36bdcfa300761c17dad2d7dd87d4f8117b48\",\"dweb:/ipfs/Qmf7YxUVK68JedWybWfXvzLCegsD95DtGc3mbpEWkWSMm8\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"src/BondingCurve.sol\":{\"keccak256\":\"0x8a7460fe3b92201f34c8c743a804457d3387e8ee1aa690ba262bc8d7a904ae09\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://64abd6a78043b889f2a8057062e21fd9886d07bea9690720aee9ffafbbc7118c\",\"dweb:/ipfs/QmYUiXdagfJdn5R82crtijWfgRFX39BevB8Ff3SGFwyco7\"]},\"test/BondingCurve.t.sol\":{\"keccak256\":\"0x6e2e7411cf5905a50751c385d91b1640b9b15d37ae2d67108b0aba9572a0f7e3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d8f92e797c691bc3fe3b1d83b418394646b67ff0fb1cf5e4a710a1bb1df2b63d\",\"dweb:/ipfs/QmWvTUG61cPjkCmwQTWkZVqW611RjHj2brPDTqtjVuMdSG\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBuyAndSellOne"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBuyMultiple"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBuyThree"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSell"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "testBuyMultiple()": {
            "notice": "make sure price increases with each token"
          },
          "testBuyThree()": {
            "notice": "make sure price increases with each token"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/BondingCurve.t.sol": "BondingCurveTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8",
        "urls": [
          "bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1",
          "dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d",
        "urls": [
          "bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e",
          "dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68",
        "urls": [
          "bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155",
          "dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol": {
        "keccak256": "0x5d3e5de9eadfa1f8a892eb2e95bbebd3e4b8c8ada5b76f104d383fea518fa688",
        "urls": [
          "bzz-raw://cde108962511e6a4d3cfb7b6fb6a36bdcfa300761c17dad2d7dd87d4f8117b48",
          "dweb:/ipfs/Qmf7YxUVK68JedWybWfXvzLCegsD95DtGc3mbpEWkWSMm8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "src/BondingCurve.sol": {
        "keccak256": "0x8a7460fe3b92201f34c8c743a804457d3387e8ee1aa690ba262bc8d7a904ae09",
        "urls": [
          "bzz-raw://64abd6a78043b889f2a8057062e21fd9886d07bea9690720aee9ffafbbc7118c",
          "dweb:/ipfs/QmYUiXdagfJdn5R82crtijWfgRFX39BevB8Ff3SGFwyco7"
        ],
        "license": "UNLICENSED"
      },
      "test/BondingCurve.t.sol": {
        "keccak256": "0x6e2e7411cf5905a50751c385d91b1640b9b15d37ae2d67108b0aba9572a0f7e3",
        "urls": [
          "bzz-raw://d8f92e797c691bc3fe3b1d83b418394646b67ff0fb1cf5e4a710a1bb1df2b63d",
          "dweb:/ipfs/QmWvTUG61cPjkCmwQTWkZVqW611RjHj2brPDTqtjVuMdSG"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/BondingCurve.t.sol",
    "id": 44921,
    "exportedSymbols": {
      "BondingCurve": [
        44661
      ],
      "BondingCurveTest": [
        44920
      ],
      "Test": [
        12215
      ],
      "console2": [
        30110
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1830:26",
    "nodes": [
      {
        "id": 44663,
        "nodeType": "PragmaDirective",
        "src": "39:24:26",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 44666,
        "nodeType": "ImportDirective",
        "src": "65:50:26",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44921,
        "sourceUnit": 12216,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44664,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12215,
              "src": "73:4:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44665,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30110,
              "src": "79:8:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44668,
        "nodeType": "ImportDirective",
        "src": "116:53:26",
        "nodes": [],
        "absolutePath": "src/BondingCurve.sol",
        "file": "../src/BondingCurve.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44921,
        "sourceUnit": 44662,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44667,
              "name": "BondingCurve",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44661,
              "src": "124:12:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44920,
        "nodeType": "ContractDefinition",
        "src": "171:1697:26",
        "nodes": [
          {
            "id": 44673,
            "nodeType": "VariableDeclaration",
            "src": "211:17:26",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "bond",
            "nameLocation": "224:4:26",
            "scope": 44920,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BondingCurve_$44661",
              "typeString": "contract BondingCurve"
            },
            "typeName": {
              "id": 44672,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44671,
                "name": "BondingCurve",
                "nameLocations": [
                  "211:12:26"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44661,
                "src": "211:12:26"
              },
              "referencedDeclaration": 44661,
              "src": "211:12:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BondingCurve_$44661",
                "typeString": "contract BondingCurve"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44675,
            "nodeType": "VariableDeclaration",
            "src": "234:13:26",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "242:5:26",
            "scope": 44920,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44674,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "234:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44677,
            "nodeType": "VariableDeclaration",
            "src": "253:13:26",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "user1",
            "nameLocation": "261:5:26",
            "scope": 44920,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44676,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "253:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44679,
            "nodeType": "VariableDeclaration",
            "src": "272:13:26",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "user2",
            "nameLocation": "280:5:26",
            "scope": 44920,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44678,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "272:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44727,
            "nodeType": "FunctionDefinition",
            "src": "292:222:26",
            "nodes": [],
            "body": {
              "id": 44726,
              "nodeType": "Block",
              "src": "316:198:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44682,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44675,
                      "src": "326:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 44685,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "342:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondingCurveTest_$44920",
                            "typeString": "contract BondingCurveTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BondingCurveTest_$44920",
                            "typeString": "contract BondingCurveTest"
                          }
                        ],
                        "id": 44684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "334:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 44683,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "334:7:26",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 44686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "334:13:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "326:21:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 44688,
                  "nodeType": "ExpressionStatement",
                  "src": "326:21:26"
                },
                {
                  "expression": {
                    "id": 44694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44689,
                      "name": "user1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44677,
                      "src": "357:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307831",
                          "id": 44692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "373:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "0x1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 44691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "365:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 44690,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "365:7:26",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 44693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "365:12:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "357:20:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 44695,
                  "nodeType": "ExpressionStatement",
                  "src": "357:20:26"
                },
                {
                  "expression": {
                    "id": 44701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44696,
                      "name": "user2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44679,
                      "src": "387:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307832",
                          "id": 44699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "403:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "0x2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 44698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "395:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 44697,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "395:7:26",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 44700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "395:12:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "387:20:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 44702,
                  "nodeType": "ExpressionStatement",
                  "src": "387:20:26"
                },
                {
                  "expression": {
                    "id": 44710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44703,
                      "name": "bond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44673,
                      "src": "417:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BondingCurve_$44661",
                        "typeString": "contract BondingCurve"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 44707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "441:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "32",
                          "id": 44708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "444:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 44706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "424:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint256_$returns$_t_contract$_BondingCurve_$44661_$",
                          "typeString": "function (uint256,uint256) returns (contract BondingCurve)"
                        },
                        "typeName": {
                          "id": 44705,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 44704,
                            "name": "BondingCurve",
                            "nameLocations": [
                              "428:12:26"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44661,
                            "src": "428:12:26"
                          },
                          "referencedDeclaration": 44661,
                          "src": "428:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondingCurve_$44661",
                            "typeString": "contract BondingCurve"
                          }
                        }
                      },
                      "id": 44709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "424:22:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BondingCurve_$44661",
                        "typeString": "contract BondingCurve"
                      }
                    },
                    "src": "417:29:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BondingCurve_$44661",
                      "typeString": "contract BondingCurve"
                    }
                  },
                  "id": 44711,
                  "nodeType": "ExpressionStatement",
                  "src": "417:29:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44715,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44675,
                        "src": "465:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 44716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "472:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 44712,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "457:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13921",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "460:4:26",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13499,
                      "src": "457:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 44717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "457:20:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44718,
                  "nodeType": "ExpressionStatement",
                  "src": "457:20:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44722,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44677,
                        "src": "495:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 44723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "502:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 44719,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "487:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13921",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "490:4:26",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13499,
                      "src": "487:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 44724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "487:20:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44725,
                  "nodeType": "ExpressionStatement",
                  "src": "487:20:26"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "301:5:26",
            "parameters": {
              "id": 44680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "306:2:26"
            },
            "returnParameters": {
              "id": 44681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "316:0:26"
            },
            "scope": 44920,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44731,
            "nodeType": "FunctionDefinition",
            "src": "520:29:26",
            "nodes": [],
            "body": {
              "id": 44730,
              "nodeType": "Block",
              "src": "547:2:26",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 44728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "527:2:26"
            },
            "returnParameters": {
              "id": 44729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "547:0:26"
            },
            "scope": 44920,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44788,
            "nodeType": "FunctionDefinition",
            "src": "555:361:26",
            "nodes": [],
            "body": {
              "id": 44787,
              "nodeType": "Block",
              "src": "591:325:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 44737,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "618:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondingCurveTest_$44920",
                                "typeString": "contract BondingCurveTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondingCurveTest_$44920",
                                "typeString": "contract BondingCurveTest"
                              }
                            ],
                            "id": 44736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "610:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44735,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "610:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "610:13:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 44739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "624:7:26",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "610:21:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 44740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "633:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "id": 44734,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "601:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "601:37:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44742,
                  "nodeType": "ExpressionStatement",
                  "src": "601:37:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "692:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 44743,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44673,
                          "src": "649:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondingCurve_$44661",
                            "typeString": "contract BondingCurve"
                          }
                        },
                        "id": 44745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "654:14:26",
                        "memberName": "purchaseTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44480,
                        "src": "649:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 44748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value",
                        "gas"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 44746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "676:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "313530303030",
                          "id": 44747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "684:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_150000_by_1",
                            "typeString": "int_const 150000"
                          },
                          "value": "150000"
                        }
                      ],
                      "src": "649:42:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$gasvalue",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 44750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "649:45:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44751,
                  "nodeType": "ExpressionStatement",
                  "src": "649:45:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 44757,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "736:4:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondingCurveTest_$44920",
                                  "typeString": "contract BondingCurveTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondingCurveTest_$44920",
                                  "typeString": "contract BondingCurveTest"
                                }
                              ],
                              "id": 44756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "728:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 44755,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "728:7:26",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 44758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "728:13:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 44753,
                            "name": "bond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44673,
                            "src": "713:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondingCurve_$44661",
                              "typeString": "contract BondingCurve"
                            }
                          },
                          "id": 44754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "718:9:26",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43820,
                          "src": "713:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 44759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "713:29:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 44760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "744:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 44752,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "704:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "704:42:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44762,
                  "nodeType": "ExpressionStatement",
                  "src": "704:42:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 44766,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "773:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondingCurveTest_$44920",
                                "typeString": "contract BondingCurveTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondingCurveTest_$44920",
                                "typeString": "contract BondingCurveTest"
                              }
                            ],
                            "id": 44765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "765:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44764,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "765:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "765:13:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 44768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "779:7:26",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "765:21:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "393939",
                        "id": 44769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "788:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_999_by_1",
                          "typeString": "int_const 999"
                        },
                        "value": "999"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_999_by_1",
                          "typeString": "int_const 999"
                        }
                      ],
                      "id": 44763,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "756:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "756:36:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44771,
                  "nodeType": "ExpressionStatement",
                  "src": "756:36:26"
                },
                {
                  "documentation": "@dev sell and get money back",
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "860:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 44772,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44673,
                        "src": "844:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondingCurve_$44661",
                          "typeString": "contract BondingCurve"
                        }
                      },
                      "id": 44774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "849:10:26",
                      "memberName": "sellTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44532,
                      "src": "844:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 44776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "844:18:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44777,
                  "nodeType": "ExpressionStatement",
                  "src": "844:18:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 44781,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "889:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondingCurveTest_$44920",
                                "typeString": "contract BondingCurveTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondingCurveTest_$44920",
                                "typeString": "contract BondingCurveTest"
                              }
                            ],
                            "id": 44780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "881:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44779,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "881:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "881:13:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 44783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "895:7:26",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "881:21:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 44784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "904:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "id": 44778,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "872:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "872:37:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44786,
                  "nodeType": "ExpressionStatement",
                  "src": "872:37:26"
                }
              ]
            },
            "functionSelector": "e816c59e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBuyAndSellOne",
            "nameLocation": "564:17:26",
            "parameters": {
              "id": 44732,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "581:2:26"
            },
            "returnParameters": {
              "id": 44733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "591:0:26"
            },
            "scope": 44920,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44813,
            "nodeType": "FunctionDefinition",
            "src": "980:145:26",
            "nodes": [],
            "body": {
              "id": 44812,
              "nodeType": "Block",
              "src": "1011:114:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 44798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1064:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "expression": {
                          "id": 44792,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44673,
                          "src": "1021:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondingCurve_$44661",
                            "typeString": "contract BondingCurve"
                          }
                        },
                        "id": 44794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1026:14:26",
                        "memberName": "purchaseTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44480,
                        "src": "1021:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 44797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value",
                        "gas"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "39",
                          "id": 44795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1048:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        },
                        {
                          "hexValue": "313530303030",
                          "id": 44796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1056:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_150000_by_1",
                            "typeString": "int_const 150000"
                          },
                          "value": "150000"
                        }
                      ],
                      "src": "1021:42:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$gasvalue",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 44799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1021:45:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44800,
                  "nodeType": "ExpressionStatement",
                  "src": "1021:45:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 44806,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1108:4:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondingCurveTest_$44920",
                                  "typeString": "contract BondingCurveTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondingCurveTest_$44920",
                                  "typeString": "contract BondingCurveTest"
                                }
                              ],
                              "id": 44805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1100:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 44804,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1100:7:26",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 44807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1100:13:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 44802,
                            "name": "bond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44673,
                            "src": "1085:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondingCurve_$44661",
                              "typeString": "contract BondingCurve"
                            }
                          },
                          "id": 44803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1090:9:26",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43820,
                          "src": "1085:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 44808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1085:29:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 44809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1116:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 44801,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1076:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1076:42:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44811,
                  "nodeType": "ExpressionStatement",
                  "src": "1076:42:26"
                }
              ]
            },
            "documentation": {
              "id": 44789,
              "nodeType": "StructuredDocumentation",
              "src": "922:53:26",
              "text": "@notice make sure price increases with each token"
            },
            "functionSelector": "23d6213c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBuyThree",
            "nameLocation": "989:12:26",
            "parameters": {
              "id": 44790,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1001:2:26"
            },
            "returnParameters": {
              "id": 44791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1011:0:26"
            },
            "scope": 44920,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44856,
            "nodeType": "FunctionDefinition",
            "src": "1189:258:26",
            "nodes": [],
            "body": {
              "id": 44855,
              "nodeType": "Block",
              "src": "1223:224:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1276:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 44817,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44673,
                          "src": "1233:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondingCurve_$44661",
                            "typeString": "contract BondingCurve"
                          }
                        },
                        "id": 44819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1238:14:26",
                        "memberName": "purchaseTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44480,
                        "src": "1233:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 44822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value",
                        "gas"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 44820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1260:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "313530303030",
                          "id": 44821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1268:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_150000_by_1",
                            "typeString": "int_const 150000"
                          },
                          "value": "150000"
                        }
                      ],
                      "src": "1233:42:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$gasvalue",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 44824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1233:45:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44825,
                  "nodeType": "ExpressionStatement",
                  "src": "1233:45:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1331:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 44826,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44673,
                          "src": "1288:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondingCurve_$44661",
                            "typeString": "contract BondingCurve"
                          }
                        },
                        "id": 44828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1293:14:26",
                        "memberName": "purchaseTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44480,
                        "src": "1288:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 44831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value",
                        "gas"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "33",
                          "id": 44829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1315:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        {
                          "hexValue": "313530303030",
                          "id": 44830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1323:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_150000_by_1",
                            "typeString": "int_const 150000"
                          },
                          "value": "150000"
                        }
                      ],
                      "src": "1288:42:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$gasvalue",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 44833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1288:45:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44834,
                  "nodeType": "ExpressionStatement",
                  "src": "1288:45:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1386:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 44835,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44673,
                          "src": "1343:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondingCurve_$44661",
                            "typeString": "contract BondingCurve"
                          }
                        },
                        "id": 44837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1348:14:26",
                        "memberName": "purchaseTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44480,
                        "src": "1343:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 44840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value",
                        "gas"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "35",
                          "id": 44838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1370:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        {
                          "hexValue": "313530303030",
                          "id": 44839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1378:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_150000_by_1",
                            "typeString": "int_const 150000"
                          },
                          "value": "150000"
                        }
                      ],
                      "src": "1343:42:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$gasvalue",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 44842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1343:45:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44843,
                  "nodeType": "ExpressionStatement",
                  "src": "1343:45:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 44849,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1430:4:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondingCurveTest_$44920",
                                  "typeString": "contract BondingCurveTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondingCurveTest_$44920",
                                  "typeString": "contract BondingCurveTest"
                                }
                              ],
                              "id": 44848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1422:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 44847,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1422:7:26",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 44850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1422:13:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 44845,
                            "name": "bond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44673,
                            "src": "1407:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondingCurve_$44661",
                              "typeString": "contract BondingCurve"
                            }
                          },
                          "id": 44846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1412:9:26",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43820,
                          "src": "1407:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 44851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1407:29:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 44852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1438:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 44844,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1398:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1398:42:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44854,
                  "nodeType": "ExpressionStatement",
                  "src": "1398:42:26"
                }
              ]
            },
            "documentation": {
              "id": 44814,
              "nodeType": "StructuredDocumentation",
              "src": "1131:53:26",
              "text": "@notice make sure price increases with each token"
            },
            "functionSelector": "024b85d8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBuyMultiple",
            "nameLocation": "1198:15:26",
            "parameters": {
              "id": 44815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1213:2:26"
            },
            "returnParameters": {
              "id": 44816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1223:0:26"
            },
            "scope": 44920,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44919,
            "nodeType": "FunctionDefinition",
            "src": "1453:412:26",
            "nodes": [],
            "body": {
              "id": 44918,
              "nodeType": "Block",
              "src": "1480:385:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 44862,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1507:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondingCurveTest_$44920",
                                "typeString": "contract BondingCurveTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondingCurveTest_$44920",
                                "typeString": "contract BondingCurveTest"
                              }
                            ],
                            "id": 44861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1499:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44860,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1499:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1499:13:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 44864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1513:7:26",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1499:21:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 44865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1522:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "id": 44859,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1490:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1490:37:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44867,
                  "nodeType": "ExpressionStatement",
                  "src": "1490:37:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1581:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 44868,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44673,
                          "src": "1538:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondingCurve_$44661",
                            "typeString": "contract BondingCurve"
                          }
                        },
                        "id": 44870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1543:14:26",
                        "memberName": "purchaseTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44480,
                        "src": "1538:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 44873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value",
                        "gas"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 44871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1565:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "313530303030",
                          "id": 44872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1573:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_150000_by_1",
                            "typeString": "int_const 150000"
                          },
                          "value": "150000"
                        }
                      ],
                      "src": "1538:42:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$gasvalue",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 44875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1538:45:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44876,
                  "nodeType": "ExpressionStatement",
                  "src": "1538:45:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44880,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44677,
                        "src": "1602:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 44877,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1593:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13921",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1596:5:26",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13582,
                      "src": "1593:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 44881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1593:15:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44882,
                  "nodeType": "ExpressionStatement",
                  "src": "1593:15:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1661:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 44883,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44673,
                          "src": "1618:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondingCurve_$44661",
                            "typeString": "contract BondingCurve"
                          }
                        },
                        "id": 44885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1623:14:26",
                        "memberName": "purchaseTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44480,
                        "src": "1618:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 44888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value",
                        "gas"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "33",
                          "id": 44886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1645:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        {
                          "hexValue": "313530303030",
                          "id": 44887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1653:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_150000_by_1",
                            "typeString": "int_const 150000"
                          },
                          "value": "150000"
                        }
                      ],
                      "src": "1618:42:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$gasvalue",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 44890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1618:45:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44891,
                  "nodeType": "ExpressionStatement",
                  "src": "1618:45:26"
                },
                {
                  "documentation": "@dev first person who bought, sells and makes a profit",
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1757:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 44892,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44673,
                        "src": "1741:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondingCurve_$44661",
                          "typeString": "contract BondingCurve"
                        }
                      },
                      "id": 44894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1746:10:26",
                      "memberName": "sellTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44532,
                      "src": "1741:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 44896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1741:18:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44897,
                  "nodeType": "ExpressionStatement",
                  "src": "1741:18:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 44903,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1801:4:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondingCurveTest_$44920",
                                  "typeString": "contract BondingCurveTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondingCurveTest_$44920",
                                  "typeString": "contract BondingCurveTest"
                                }
                              ],
                              "id": 44902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1793:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 44901,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1793:7:26",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 44904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1793:13:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 44899,
                            "name": "bond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44673,
                            "src": "1778:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondingCurve_$44661",
                              "typeString": "contract BondingCurve"
                            }
                          },
                          "id": 44900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1783:9:26",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43820,
                          "src": "1778:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 44905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1778:29:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 44906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1809:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 44898,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1769:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1769:42:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44908,
                  "nodeType": "ExpressionStatement",
                  "src": "1769:42:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 44912,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1838:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondingCurveTest_$44920",
                                "typeString": "contract BondingCurveTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondingCurveTest_$44920",
                                "typeString": "contract BondingCurveTest"
                              }
                            ],
                            "id": 44911,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1830:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44910,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1830:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1830:13:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 44914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1844:7:26",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1830:21:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303032",
                        "id": 44915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1853:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1002_by_1",
                          "typeString": "int_const 1002"
                        },
                        "value": "1002"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1002_by_1",
                          "typeString": "int_const 1002"
                        }
                      ],
                      "id": 44909,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1821:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1821:37:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44917,
                  "nodeType": "ExpressionStatement",
                  "src": "1821:37:26"
                }
              ]
            },
            "functionSelector": "31c42ca6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSell",
            "nameLocation": "1462:8:26",
            "parameters": {
              "id": 44857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1470:2:26"
            },
            "returnParameters": {
              "id": 44858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1480:0:26"
            },
            "scope": 44920,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44669,
              "name": "Test",
              "nameLocations": [
                "200:4:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12215,
              "src": "200:4:26"
            },
            "id": 44670,
            "nodeType": "InheritanceSpecifier",
            "src": "200:4:26"
          }
        ],
        "canonicalName": "BondingCurveTest",
        "contractDependencies": [
          44661
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          44920,
          12215,
          12164,
          7700,
          7375,
          6582,
          4522,
          3784,
          2291,
          2357,
          2354
        ],
        "name": "BondingCurveTest",
        "nameLocation": "180:16:26",
        "scope": 44921,
        "usedErrors": [],
        "usedEvents": [
          5,
          9,
          13,
          17,
          21,
          25,
          29,
          33,
          39,
          45,
          53,
          61,
          67,
          73,
          79,
          85,
          2379,
          2384,
          2389,
          2396,
          2403,
          2410
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 26
}