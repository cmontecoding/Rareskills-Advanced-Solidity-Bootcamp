{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBuyAndSellOne",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBuyMultiple",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBuyThree",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOutsideGasLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSell",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b5061294b8061003d6000396000f3fe608060405260043610620001175760003560e01c806366d9a9a011620000a1578063b5508aa9116200006c578063b5508aa9146200028b578063ba414fa614620002a3578063e20c9f7114620002cc578063e816c59e14620002e4578063fa7626d414620002fc57600080fd5b806366d9a9a0146200020d578063703fe500146200023457806385226c81146200024c578063916a17c6146200027357600080fd5b80632ade388011620000e25780632ade3880146200019e57806331c42ca614620001c55780633e5e3c2314620001dd5780633f7286f414620001f557600080fd5b8063024b85d814620001245780630a9254e4146200013e5780631ed7831c146200015657806323d6213c146200018657600080fd5b366200011f57005b600080fd5b3480156200013157600080fd5b506200013c62000318565b005b3480156200014b57600080fd5b506200013c620004d3565b3480156200016357600080fd5b506200016e62000647565b6040516200017d919062001514565b60405180910390f35b3480156200019357600080fd5b506200013c620006ab565b348015620001ab57600080fd5b50620001b6620006e5565b6040516200017d919062001589565b348015620001d257600080fd5b506200013c62000833565b348015620001ea57600080fd5b506200016e62000a80565b3480156200020257600080fd5b506200016e62000ae2565b3480156200021a57600080fd5b506200022562000b44565b6040516200017d91906200166a565b3480156200024157600080fd5b506200013c62000c2e565b3480156200025957600080fd5b506200026462000d22565b6040516200017d919062001721565b3480156200028057600080fd5b506200022562000dfc565b3480156200029857600080fd5b506200026462000ee6565b348015620002b057600080fd5b50620002bb62000fc0565b60405190151581526020016200017d565b348015620002d957600080fd5b506200016e620010f7565b348015620002f157600080fd5b506200013c62001159565b3480156200030957600080fd5b50600754620002bb9060ff1681565b601c54604051637b97008d60e01b81526001600482018190526001600160a01b0390921691637b97008d91620249f091906024016000604051808303818589803b1580156200036657600080fd5b5088f11580156200037b573d6000803e3d6000fd5b5050601c54604051637b97008d60e01b8152600160048201526001600160a01b039091169450637b97008d9350620249f09250600391506024016000604051808303818589803b158015620003cf57600080fd5b5088f1158015620003e4573d6000803e3d6000fd5b5050601c54604051637b97008d60e01b8152600160048201526001600160a01b039091169450637b97008d9350620249f09250600591506024015b6000604051808303818589803b1580156200043957600080fd5b5088f11580156200044e573d6000803e3d6000fd5b5050601c546040516370a0823160e01b8152306004820152620004d195506001600160a01b0390911693506370a0823192506024019050602060405180830381865afa158015620004a3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004c9919062001792565b6003620012c4565b565b601d8054306001600160a01b031991821617909155601e805482166001908117909155601f80546002931683179055604051909190620005139062001506565b9182526020820152604001604051809103906000f0801580156200053b573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b03928316179055601d5460405163c88a5e6d60e01b8152911660048201526103e86024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b158015620005b157600080fd5b505af1158015620005c6573d6000803e3d6000fd5b5050601e5460405163c88a5e6d60e01b81526001600160a01b0390911660048201526103e86024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d9150604401600060405180830381600087803b1580156200062c57600080fd5b505af115801562000641573d6000803e3d6000fd5b50505050565b60606014805480602002602001604051908101604052809291908181526020018280548015620006a157602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000682575b5050505050905090565b601c54604051637b97008d60e01b8152600360048201526001600160a01b0390911690637b97008d90620249f0906009906024016200041f565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200082a57600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015620008125783829060005260206000200180546200077e90620017ac565b80601f0160208091040260200160405190810160405280929190818152602001828054620007ac90620017ac565b8015620007fd5780601f10620007d157610100808354040283529160200191620007fd565b820191906000526020600020905b815481529060010190602001808311620007df57829003601f168201915b5050505050815260200190600101906200075c565b50505050815250508152602001906001019062000709565b50505050905090565b62000841476103e8620012c4565b601c54604051637b97008d60e01b81526001600482018190526001600160a01b0390921691637b97008d91620249f091906024016000604051808303818589803b1580156200088f57600080fd5b5088f1158015620008a4573d6000803e3d6000fd5b5050601e5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d945063ca669fa793506024019150620008f19050565b600060405180830381600087803b1580156200090c57600080fd5b505af115801562000921573d6000803e3d6000fd5b5050601c54604051637b97008d60e01b8152600160048201526001600160a01b039091169250637b97008d9150620249f0906003906024016000604051808303818589803b1580156200097357600080fd5b5088f115801562000988573d6000803e3d6000fd5b5050601c54604051636c11bcd360e01b8152600160048201526001600160a01b039091169450636c11bcd393506024019150620009c29050565b600060405180830381600087803b158015620009dd57600080fd5b505af1158015620009f2573d6000803e3d6000fd5b5050601c546040516370a0823160e01b815230600482015262000a7293506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801562000a44573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a6a919062001792565b6000620012c4565b620004d1476103ea620012c4565b60606016805480602002602001604051908101604052809291908181526020018280548015620006a1576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000682575050505050905090565b60606015805480602002602001604051908101604052809291908181526020018280548015620006a1576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000682575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156200082a5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000c1557602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000bd65790505b5050505050815250508152602001906001019062000b68565b60405163f28dceb360e01b815260206004820152601260248201527111d85cc81b1a5b5a5d08195e18d95959195960721b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb390606401600060405180830381600087803b15801562000c9e57600080fd5b505af115801562000cb3573d6000803e3d6000fd5b5050601c54604051637b97008d60e01b81526001600482018190526001600160a01b039092169350637b97008d92506202848891906024016000604051808303818589803b15801562000d0557600080fd5b5088f115801562000d1a573d6000803e3d6000fd5b505050505050565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156200082a57838290600052602060002001805462000d6890620017ac565b80601f016020809104026020016040519081016040528092919081815260200182805462000d9690620017ac565b801562000de75780601f1062000dbb5761010080835404028352916020019162000de7565b820191906000526020600020905b81548152906001019060200180831162000dc957829003601f168201915b50505050508152602001906001019062000d46565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156200082a5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000ecd57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000e8e5790505b5050505050815250508152602001906001019062000e20565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156200082a57838290600052602060002001805462000f2c90620017ac565b80601f016020809104026020016040519081016040528092919081815260200182805462000f5a90620017ac565b801562000fab5780601f1062000f7f5761010080835404028352916020019162000fab565b820191906000526020600020905b81548152906001019060200180831162000f8d57829003601f168201915b50505050508152602001906001019062000f0a565b600754600090610100900460ff161562000fe35750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620010f25760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162001074917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620017e8565b60408051601f198184030181529082905262001090916200181b565b6000604051808303816000865af19150503d8060008114620010cf576040519150601f19603f3d011682016040523d82523d6000602084013e620010d4565b606091505b5091505080806020019051810190620010ee919062001839565b9150505b919050565b60606013805480602002602001604051908101604052809291908181526020018280548015620006a1576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000682575050505050905090565b62001167476103e8620012c4565b601c54604051637b97008d60e01b81526001600482018190526001600160a01b0390921691637b97008d91620249f091906024016000604051808303818589803b158015620011b557600080fd5b5088f1158015620011ca573d6000803e3d6000fd5b5050601c546040516370a0823160e01b81523060048201526200124d95506001600160a01b0390911693506370a0823192506024019050602060405180830381865afa1580156200121f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001245919062001792565b6001620012c4565b6200125b476103e7620012c4565b601c54604051636c11bcd360e01b8152600160048201526001600160a01b0390911690636c11bcd390602401600060405180830381600087803b158015620012a257600080fd5b505af1158015620012b7573d6000803e3d6000fd5b50505050620004d1476103e85b808214620013ef577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620013379060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1620013ef620013f3565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620014f55760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620014909291602001620017e8565b60408051601f1981840301815290829052620014ac916200181b565b6000604051808303816000865af19150503d8060008114620014eb576040519150601f19603f3d011682016040523d82523d6000602084013e620014f0565b606091505b505050505b6007805461ff001916610100179055565b6110b1806200186583390190565b6020808252825182820181905260009190848201906040850190845b81811015620015575783516001600160a01b03168352928401929184019160010162001530565b50909695505050505050565b60005b838110156200158057818101518382015260200162001566565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200165d57603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b818110156200164557898403605f190183528451805180865262001625818e88018f850162001563565b958c0195601f01601f1916949094018b019350918a0191600101620015fb565b509197505050938601935090850190600101620015b0565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200171257898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620016fc5783516001600160e01b0319168252928b019260019290920191908b0190620016d0565b50978a0197955050509187019160010162001692565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200165d57878503603f190184528151805180875262001772818989018a850162001563565b601f01601f19169590950186019450928501929085019060010162001748565b600060208284031215620017a557600080fd5b5051919050565b600181811c90821680620017c157607f821691505b602082108103620017e257634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b03198316815281516000906200180d81600485016020870162001563565b919091016004019392505050565b600082516200182f81846020870162001563565b9190910192915050565b6000602082840312156200184c57600080fd5b815180151581146200185d57600080fd5b939250505056fe60c0604052620271006006553480156200001857600080fd5b50604051620010b1380380620010b18339810160408190526200003b91620000b9565b60405180604001604052806004815260200163109bdb9960e21b815250604051806040016040528060048152602001631093d39160e21b815250816003908162000086919062000183565b50600462000095828262000183565b5050600580546001600160a01b031916331790555060809190915260a0526200024f565b60008060408385031215620000cd57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200010957607f821691505b6020821081036200012a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200017e57600081815260208120601f850160051c81016020861015620001595750805b601f850160051c820191505b818110156200017a5782815560010162000165565b5050505b505050565b81516001600160401b038111156200019f576200019f620000de565b620001b781620001b08454620000f4565b8462000130565b602080601f831160018114620001ef5760008415620001d65750858301515b600019600386901b1c1916600185901b1785556200017a565b600085815260208120601f198616915b828110156200022057888601518255948401946001909101908401620001ff565b50858210156200023f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a051610e2e620002836000396000818161030f015261080d0152600081816101eb01526108360152610e2e6000f3fe6080604052600436106101145760003560e01c80635e45da23116100a057806383caf2751161006457806383caf275146102fd5780638da5cb5b1461033157806395d89b4114610369578063a9059cbb1461037e578063dd62ed3e1461039e57600080fd5b80635e45da231461025e5780636c11bcd31461027457806370a08231146102945780637b97008d146102ca5780637d57b560146102dd57600080fd5b806318160ddd116100e757806318160ddd146101c45780631d0806ae146101d957806323b872dd1461020d57806324600fc31461022d578063313ce5671461024257600080fd5b806306fdde0314610119578063095ea7b314610144578063145f1019146101745780631776834a146101a2575b600080fd5b34801561012557600080fd5b5061012e6103e4565b60405161013b9190610bcd565b60405180910390f35b34801561015057600080fd5b5061016461015f366004610c37565b610476565b604051901515815260200161013b565b34801561018057600080fd5b5061019461018f366004610c61565b610490565b60405190815260200161013b565b3480156101ae57600080fd5b506101c26101bd366004610c61565b6104c2565b005b3480156101d057600080fd5b50600254610194565b3480156101e557600080fd5b506101947f000000000000000000000000000000000000000000000000000000000000000081565b34801561021957600080fd5b50610164610228366004610c7a565b6104fa565b34801561023957600080fd5b506101c261051e565b34801561024e57600080fd5b506040516012815260200161013b565b34801561026a57600080fd5b5061019460065481565b34801561028057600080fd5b506101c261028f366004610c61565b610584565b3480156102a057600080fd5b506101946102af366004610cb6565b6001600160a01b031660009081526020819052604090205490565b6101c26102d8366004610c61565b61065f565b3480156102e957600080fd5b506101946102f8366004610c61565b610778565b34801561030957600080fd5b506101947f000000000000000000000000000000000000000000000000000000000000000081565b34801561033d57600080fd5b50600554610351906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b34801561037557600080fd5b5061012e6107a3565b34801561038a57600080fd5b50610164610399366004610c37565b6107b2565b3480156103aa57600080fd5b506101946103b9366004610cd1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546103f390610d04565b80601f016020809104026020016040519081016040528092919081815260200182805461041f90610d04565b801561046c5780601f106104415761010080835404028352916020019161046c565b820191906000526020600020905b81548152906001019060200180831161044f57829003601f168201915b5050505050905090565b6000336104848185856107c0565b60019150505b92915050565b6000808261049d60025490565b6104a79190610d54565b90506104bb6104b560025490565b826107d2565b9392505050565b6005546001600160a01b031633146104f55760405162461bcd60e51b81526004016104ec90610d67565b60405180910390fd5b600655565b600033610508858285610881565b6105138585856108ff565b506001949350505050565b6005546001600160a01b031633146105485760405162461bcd60e51b81526004016104ec90610d67565b6005546040516001600160a01b03909116904780156108fc02916000818181858888f19350505050158015610581573d6000803e3d6000fd5b50565b600081116105cb5760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081d1bdad95b88185b5bdd5b9d60621b60448201526064016104ec565b60006105d682610778565b90506105e2338361095e565b604051339082156108fc029083906000818181858888f1935050505015801561060f573d6000803e3d6000fd5b50337f6db63bebf1e6540277744df32846ebdb98385b1a73f2d5de49b28348add63f50838361063d60025490565b6040805193845260208401929092529082015260600160405180910390a25050565b6006545a11156106a65760405162461bcd60e51b815260206004820152601260248201527111d85cc81b1a5b5a5d08195e18d95959195960721b60448201526064016104ec565b600081116106ed5760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081d1bdad95b88185b5bdd5b9d60621b60448201526064016104ec565b60006106f882610490565b9050803410156107415760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b60448201526064016104ec565b61074b3383610998565b337f0d1a0d5e3d583a0e92588799dd06e50fd78c07daf05f0cc06d7b848b1ca445f1838361063d60025490565b6000808261078560025490565b61078f9190610dac565b90506104bb8161079e60025490565b6107d2565b6060600480546103f390610d04565b6000336104848185856108ff565b6107cd83838360016109ce565b505050565b60008183036107e35750600061048a565b600060026107f18585610dac565b60016107fd8688610d54565b6108079190610dac565b610831907f0000000000000000000000000000000000000000000000000000000000000000610dbf565b61085b7f000000000000000000000000000000000000000000000000000000000000000080610d54565b6108659190610d54565b61086f9190610dbf565b6108799190610dd6565b949350505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146108f957818110156108ea57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016104ec565b6108f9848484840360006109ce565b50505050565b6001600160a01b03831661092957604051634b637e8f60e11b8152600060048201526024016104ec565b6001600160a01b0382166109535760405163ec442f0560e01b8152600060048201526024016104ec565b6107cd838383610aa3565b6001600160a01b03821661098857604051634b637e8f60e11b8152600060048201526024016104ec565b61099482600083610aa3565b5050565b6001600160a01b0382166109c25760405163ec442f0560e01b8152600060048201526024016104ec565b61099460008383610aa3565b6001600160a01b0384166109f85760405163e602df0560e01b8152600060048201526024016104ec565b6001600160a01b038316610a2257604051634a1406b160e11b8152600060048201526024016104ec565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156108f957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610a9591815260200190565b60405180910390a350505050565b6001600160a01b038316610ace578060026000828254610ac39190610d54565b90915550610b409050565b6001600160a01b03831660009081526020819052604090205481811015610b215760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016104ec565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610b5c57600280548290039055610b7b565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610bc091815260200190565b60405180910390a3505050565b600060208083528351808285015260005b81811015610bfa57858101830151858201604001528201610bde565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610c3257600080fd5b919050565b60008060408385031215610c4a57600080fd5b610c5383610c1b565b946020939093013593505050565b600060208284031215610c7357600080fd5b5035919050565b600080600060608486031215610c8f57600080fd5b610c9884610c1b565b9250610ca660208501610c1b565b9150604084013590509250925092565b600060208284031215610cc857600080fd5b6104bb82610c1b565b60008060408385031215610ce457600080fd5b610ced83610c1b565b9150610cfb60208401610c1b565b90509250929050565b600181811c90821680610d1857607f821691505b602082108103610d3857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561048a5761048a610d3e565b60208082526025908201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60408201526431ba34b7b760d91b606082015260800190565b8181038181111561048a5761048a610d3e565b808202811582820484141761048a5761048a610d3e565b600082610df357634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220613251cac019c41147391e5b1715290c34b877c3d32ded08cd74f144cb1a5d7664736f6c63430008150033a2646970667358221220f8c3691fe09624ee35398da2ee317f1ce5a8f278ad42b7255aa68ac604b1db1064736f6c63430008150033",
    "sourceMap": "171:1848:24:-:0;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3126:44:3;;;;;;;;;;;171:1848:24;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405260043610620001175760003560e01c806366d9a9a011620000a1578063b5508aa9116200006c578063b5508aa9146200028b578063ba414fa614620002a3578063e20c9f7114620002cc578063e816c59e14620002e4578063fa7626d414620002fc57600080fd5b806366d9a9a0146200020d578063703fe500146200023457806385226c81146200024c578063916a17c6146200027357600080fd5b80632ade388011620000e25780632ade3880146200019e57806331c42ca614620001c55780633e5e3c2314620001dd5780633f7286f414620001f557600080fd5b8063024b85d814620001245780630a9254e4146200013e5780631ed7831c146200015657806323d6213c146200018657600080fd5b366200011f57005b600080fd5b3480156200013157600080fd5b506200013c62000318565b005b3480156200014b57600080fd5b506200013c620004d3565b3480156200016357600080fd5b506200016e62000647565b6040516200017d919062001514565b60405180910390f35b3480156200019357600080fd5b506200013c620006ab565b348015620001ab57600080fd5b50620001b6620006e5565b6040516200017d919062001589565b348015620001d257600080fd5b506200013c62000833565b348015620001ea57600080fd5b506200016e62000a80565b3480156200020257600080fd5b506200016e62000ae2565b3480156200021a57600080fd5b506200022562000b44565b6040516200017d91906200166a565b3480156200024157600080fd5b506200013c62000c2e565b3480156200025957600080fd5b506200026462000d22565b6040516200017d919062001721565b3480156200028057600080fd5b506200022562000dfc565b3480156200029857600080fd5b506200026462000ee6565b348015620002b057600080fd5b50620002bb62000fc0565b60405190151581526020016200017d565b348015620002d957600080fd5b506200016e620010f7565b348015620002f157600080fd5b506200013c62001159565b3480156200030957600080fd5b50600754620002bb9060ff1681565b601c54604051637b97008d60e01b81526001600482018190526001600160a01b0390921691637b97008d91620249f091906024016000604051808303818589803b1580156200036657600080fd5b5088f11580156200037b573d6000803e3d6000fd5b5050601c54604051637b97008d60e01b8152600160048201526001600160a01b039091169450637b97008d9350620249f09250600391506024016000604051808303818589803b158015620003cf57600080fd5b5088f1158015620003e4573d6000803e3d6000fd5b5050601c54604051637b97008d60e01b8152600160048201526001600160a01b039091169450637b97008d9350620249f09250600591506024015b6000604051808303818589803b1580156200043957600080fd5b5088f11580156200044e573d6000803e3d6000fd5b5050601c546040516370a0823160e01b8152306004820152620004d195506001600160a01b0390911693506370a0823192506024019050602060405180830381865afa158015620004a3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004c9919062001792565b6003620012c4565b565b601d8054306001600160a01b031991821617909155601e805482166001908117909155601f80546002931683179055604051909190620005139062001506565b9182526020820152604001604051809103906000f0801580156200053b573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b03928316179055601d5460405163c88a5e6d60e01b8152911660048201526103e86024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b158015620005b157600080fd5b505af1158015620005c6573d6000803e3d6000fd5b5050601e5460405163c88a5e6d60e01b81526001600160a01b0390911660048201526103e86024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d9150604401600060405180830381600087803b1580156200062c57600080fd5b505af115801562000641573d6000803e3d6000fd5b50505050565b60606014805480602002602001604051908101604052809291908181526020018280548015620006a157602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000682575b5050505050905090565b601c54604051637b97008d60e01b8152600360048201526001600160a01b0390911690637b97008d90620249f0906009906024016200041f565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200082a57600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015620008125783829060005260206000200180546200077e90620017ac565b80601f0160208091040260200160405190810160405280929190818152602001828054620007ac90620017ac565b8015620007fd5780601f10620007d157610100808354040283529160200191620007fd565b820191906000526020600020905b815481529060010190602001808311620007df57829003601f168201915b5050505050815260200190600101906200075c565b50505050815250508152602001906001019062000709565b50505050905090565b62000841476103e8620012c4565b601c54604051637b97008d60e01b81526001600482018190526001600160a01b0390921691637b97008d91620249f091906024016000604051808303818589803b1580156200088f57600080fd5b5088f1158015620008a4573d6000803e3d6000fd5b5050601e5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d945063ca669fa793506024019150620008f19050565b600060405180830381600087803b1580156200090c57600080fd5b505af115801562000921573d6000803e3d6000fd5b5050601c54604051637b97008d60e01b8152600160048201526001600160a01b039091169250637b97008d9150620249f0906003906024016000604051808303818589803b1580156200097357600080fd5b5088f115801562000988573d6000803e3d6000fd5b5050601c54604051636c11bcd360e01b8152600160048201526001600160a01b039091169450636c11bcd393506024019150620009c29050565b600060405180830381600087803b158015620009dd57600080fd5b505af1158015620009f2573d6000803e3d6000fd5b5050601c546040516370a0823160e01b815230600482015262000a7293506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801562000a44573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a6a919062001792565b6000620012c4565b620004d1476103ea620012c4565b60606016805480602002602001604051908101604052809291908181526020018280548015620006a1576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000682575050505050905090565b60606015805480602002602001604051908101604052809291908181526020018280548015620006a1576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000682575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156200082a5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000c1557602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000bd65790505b5050505050815250508152602001906001019062000b68565b60405163f28dceb360e01b815260206004820152601260248201527111d85cc81b1a5b5a5d08195e18d95959195960721b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb390606401600060405180830381600087803b15801562000c9e57600080fd5b505af115801562000cb3573d6000803e3d6000fd5b5050601c54604051637b97008d60e01b81526001600482018190526001600160a01b039092169350637b97008d92506202848891906024016000604051808303818589803b15801562000d0557600080fd5b5088f115801562000d1a573d6000803e3d6000fd5b505050505050565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156200082a57838290600052602060002001805462000d6890620017ac565b80601f016020809104026020016040519081016040528092919081815260200182805462000d9690620017ac565b801562000de75780601f1062000dbb5761010080835404028352916020019162000de7565b820191906000526020600020905b81548152906001019060200180831162000dc957829003601f168201915b50505050508152602001906001019062000d46565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156200082a5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000ecd57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000e8e5790505b5050505050815250508152602001906001019062000e20565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156200082a57838290600052602060002001805462000f2c90620017ac565b80601f016020809104026020016040519081016040528092919081815260200182805462000f5a90620017ac565b801562000fab5780601f1062000f7f5761010080835404028352916020019162000fab565b820191906000526020600020905b81548152906001019060200180831162000f8d57829003601f168201915b50505050508152602001906001019062000f0a565b600754600090610100900460ff161562000fe35750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620010f25760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162001074917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620017e8565b60408051601f198184030181529082905262001090916200181b565b6000604051808303816000865af19150503d8060008114620010cf576040519150601f19603f3d011682016040523d82523d6000602084013e620010d4565b606091505b5091505080806020019051810190620010ee919062001839565b9150505b919050565b60606013805480602002602001604051908101604052809291908181526020018280548015620006a1576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000682575050505050905090565b62001167476103e8620012c4565b601c54604051637b97008d60e01b81526001600482018190526001600160a01b0390921691637b97008d91620249f091906024016000604051808303818589803b158015620011b557600080fd5b5088f1158015620011ca573d6000803e3d6000fd5b5050601c546040516370a0823160e01b81523060048201526200124d95506001600160a01b0390911693506370a0823192506024019050602060405180830381865afa1580156200121f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001245919062001792565b6001620012c4565b6200125b476103e7620012c4565b601c54604051636c11bcd360e01b8152600160048201526001600160a01b0390911690636c11bcd390602401600060405180830381600087803b158015620012a257600080fd5b505af1158015620012b7573d6000803e3d6000fd5b50505050620004d1476103e85b808214620013ef577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620013379060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1620013ef620013f3565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620014f55760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620014909291602001620017e8565b60408051601f1981840301815290829052620014ac916200181b565b6000604051808303816000865af19150503d8060008114620014eb576040519150601f19603f3d011682016040523d82523d6000602084013e620014f0565b606091505b505050505b6007805461ff001916610100179055565b6110b1806200186583390190565b6020808252825182820181905260009190848201906040850190845b81811015620015575783516001600160a01b03168352928401929184019160010162001530565b50909695505050505050565b60005b838110156200158057818101518382015260200162001566565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200165d57603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b818110156200164557898403605f190183528451805180865262001625818e88018f850162001563565b958c0195601f01601f1916949094018b019350918a0191600101620015fb565b509197505050938601935090850190600101620015b0565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200171257898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620016fc5783516001600160e01b0319168252928b019260019290920191908b0190620016d0565b50978a0197955050509187019160010162001692565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200165d57878503603f190184528151805180875262001772818989018a850162001563565b601f01601f19169590950186019450928501929085019060010162001748565b600060208284031215620017a557600080fd5b5051919050565b600181811c90821680620017c157607f821691505b602082108103620017e257634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b03198316815281516000906200180d81600485016020870162001563565b919091016004019392505050565b600082516200182f81846020870162001563565b9190910192915050565b6000602082840312156200184c57600080fd5b815180151581146200185d57600080fd5b939250505056fe60c0604052620271006006553480156200001857600080fd5b50604051620010b1380380620010b18339810160408190526200003b91620000b9565b60405180604001604052806004815260200163109bdb9960e21b815250604051806040016040528060048152602001631093d39160e21b815250816003908162000086919062000183565b50600462000095828262000183565b5050600580546001600160a01b031916331790555060809190915260a0526200024f565b60008060408385031215620000cd57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200010957607f821691505b6020821081036200012a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200017e57600081815260208120601f850160051c81016020861015620001595750805b601f850160051c820191505b818110156200017a5782815560010162000165565b5050505b505050565b81516001600160401b038111156200019f576200019f620000de565b620001b781620001b08454620000f4565b8462000130565b602080601f831160018114620001ef5760008415620001d65750858301515b600019600386901b1c1916600185901b1785556200017a565b600085815260208120601f198616915b828110156200022057888601518255948401946001909101908401620001ff565b50858210156200023f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a051610e2e620002836000396000818161030f015261080d0152600081816101eb01526108360152610e2e6000f3fe6080604052600436106101145760003560e01c80635e45da23116100a057806383caf2751161006457806383caf275146102fd5780638da5cb5b1461033157806395d89b4114610369578063a9059cbb1461037e578063dd62ed3e1461039e57600080fd5b80635e45da231461025e5780636c11bcd31461027457806370a08231146102945780637b97008d146102ca5780637d57b560146102dd57600080fd5b806318160ddd116100e757806318160ddd146101c45780631d0806ae146101d957806323b872dd1461020d57806324600fc31461022d578063313ce5671461024257600080fd5b806306fdde0314610119578063095ea7b314610144578063145f1019146101745780631776834a146101a2575b600080fd5b34801561012557600080fd5b5061012e6103e4565b60405161013b9190610bcd565b60405180910390f35b34801561015057600080fd5b5061016461015f366004610c37565b610476565b604051901515815260200161013b565b34801561018057600080fd5b5061019461018f366004610c61565b610490565b60405190815260200161013b565b3480156101ae57600080fd5b506101c26101bd366004610c61565b6104c2565b005b3480156101d057600080fd5b50600254610194565b3480156101e557600080fd5b506101947f000000000000000000000000000000000000000000000000000000000000000081565b34801561021957600080fd5b50610164610228366004610c7a565b6104fa565b34801561023957600080fd5b506101c261051e565b34801561024e57600080fd5b506040516012815260200161013b565b34801561026a57600080fd5b5061019460065481565b34801561028057600080fd5b506101c261028f366004610c61565b610584565b3480156102a057600080fd5b506101946102af366004610cb6565b6001600160a01b031660009081526020819052604090205490565b6101c26102d8366004610c61565b61065f565b3480156102e957600080fd5b506101946102f8366004610c61565b610778565b34801561030957600080fd5b506101947f000000000000000000000000000000000000000000000000000000000000000081565b34801561033d57600080fd5b50600554610351906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b34801561037557600080fd5b5061012e6107a3565b34801561038a57600080fd5b50610164610399366004610c37565b6107b2565b3480156103aa57600080fd5b506101946103b9366004610cd1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546103f390610d04565b80601f016020809104026020016040519081016040528092919081815260200182805461041f90610d04565b801561046c5780601f106104415761010080835404028352916020019161046c565b820191906000526020600020905b81548152906001019060200180831161044f57829003601f168201915b5050505050905090565b6000336104848185856107c0565b60019150505b92915050565b6000808261049d60025490565b6104a79190610d54565b90506104bb6104b560025490565b826107d2565b9392505050565b6005546001600160a01b031633146104f55760405162461bcd60e51b81526004016104ec90610d67565b60405180910390fd5b600655565b600033610508858285610881565b6105138585856108ff565b506001949350505050565b6005546001600160a01b031633146105485760405162461bcd60e51b81526004016104ec90610d67565b6005546040516001600160a01b03909116904780156108fc02916000818181858888f19350505050158015610581573d6000803e3d6000fd5b50565b600081116105cb5760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081d1bdad95b88185b5bdd5b9d60621b60448201526064016104ec565b60006105d682610778565b90506105e2338361095e565b604051339082156108fc029083906000818181858888f1935050505015801561060f573d6000803e3d6000fd5b50337f6db63bebf1e6540277744df32846ebdb98385b1a73f2d5de49b28348add63f50838361063d60025490565b6040805193845260208401929092529082015260600160405180910390a25050565b6006545a11156106a65760405162461bcd60e51b815260206004820152601260248201527111d85cc81b1a5b5a5d08195e18d95959195960721b60448201526064016104ec565b600081116106ed5760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081d1bdad95b88185b5bdd5b9d60621b60448201526064016104ec565b60006106f882610490565b9050803410156107415760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b60448201526064016104ec565b61074b3383610998565b337f0d1a0d5e3d583a0e92588799dd06e50fd78c07daf05f0cc06d7b848b1ca445f1838361063d60025490565b6000808261078560025490565b61078f9190610dac565b90506104bb8161079e60025490565b6107d2565b6060600480546103f390610d04565b6000336104848185856108ff565b6107cd83838360016109ce565b505050565b60008183036107e35750600061048a565b600060026107f18585610dac565b60016107fd8688610d54565b6108079190610dac565b610831907f0000000000000000000000000000000000000000000000000000000000000000610dbf565b61085b7f000000000000000000000000000000000000000000000000000000000000000080610d54565b6108659190610d54565b61086f9190610dbf565b6108799190610dd6565b949350505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146108f957818110156108ea57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016104ec565b6108f9848484840360006109ce565b50505050565b6001600160a01b03831661092957604051634b637e8f60e11b8152600060048201526024016104ec565b6001600160a01b0382166109535760405163ec442f0560e01b8152600060048201526024016104ec565b6107cd838383610aa3565b6001600160a01b03821661098857604051634b637e8f60e11b8152600060048201526024016104ec565b61099482600083610aa3565b5050565b6001600160a01b0382166109c25760405163ec442f0560e01b8152600060048201526024016104ec565b61099460008383610aa3565b6001600160a01b0384166109f85760405163e602df0560e01b8152600060048201526024016104ec565b6001600160a01b038316610a2257604051634a1406b160e11b8152600060048201526024016104ec565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156108f957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610a9591815260200190565b60405180910390a350505050565b6001600160a01b038316610ace578060026000828254610ac39190610d54565b90915550610b409050565b6001600160a01b03831660009081526020819052604090205481811015610b215760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016104ec565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610b5c57600280548290039055610b7b565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610bc091815260200190565b60405180910390a3505050565b600060208083528351808285015260005b81811015610bfa57858101830151858201604001528201610bde565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610c3257600080fd5b919050565b60008060408385031215610c4a57600080fd5b610c5383610c1b565b946020939093013593505050565b600060208284031215610c7357600080fd5b5035919050565b600080600060608486031215610c8f57600080fd5b610c9884610c1b565b9250610ca660208501610c1b565b9150604084013590509250925092565b600060208284031215610cc857600080fd5b6104bb82610c1b565b60008060408385031215610ce457600080fd5b610ced83610c1b565b9150610cfb60208401610c1b565b90509250929050565b600181811c90821680610d1857607f821691505b602082108103610d3857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561048a5761048a610d3e565b60208082526025908201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60408201526431ba34b7b760d91b606082015260800190565b8181038181111561048a5761048a610d3e565b808202811582820484141761048a5761048a610d3e565b600082610df357634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220613251cac019c41147391e5b1715290c34b877c3d32ded08cd74f144cb1a5d7664736f6c63430008150033a2646970667358221220f8c3691fe09624ee35398da2ee317f1ce5a8f278ad42b7255aa68ac604b1db1064736f6c63430008150033",
    "sourceMap": "171:1848:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1189:258;;;;;;;;;;;;;:::i;:::-;;292:222;;;;;;;;;;;;;:::i;2452:134:6:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;980:145:24;;;;;;;;;;;;;:::i;3360:151:6:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1453:411:24:-;;;;;;;;;;;;;:::i;3221:133:6:-;;;;;;;;;;;;;:::i;2922:141::-;;;;;;;;;;;;;:::i;2738:178::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1870:147:24:-;;;;;;;;;;;;;:::i;2592:140:6:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3069:146::-;;;;;;;;;;;;;:::i;2157:141::-;;;;;;;;;;;;;:::i;1819:584:0:-;;;;;;;;;;;;;:::i;:::-;;;5592:14:25;;5585:22;5567:41;;5555:2;5540:18;1819:584:0;5427:187:25;2304:142:6;;;;;;;;;;;;;:::i;555:361:24:-;;;;;;;;;;;;;:::i;1572:26:0:-;;;;;;;;;;-1:-1:-1;1572:26:0;;;;;;;;1189:258:24;1233:4;;:45;;-1:-1:-1;;;1233:45:24;;:4;:45;;;5773:25:25;;;-1:-1:-1;;;;;1233:4:24;;;;:19;;1268:6;;1233:4;5746:18:25;;1233:45:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1288:4:24;;:45;;-1:-1:-1;;;1288:45:24;;:4;:45;;;5773:25:25;-1:-1:-1;;;;;1288:4:24;;;;-1:-1:-1;1288:19:24;;-1:-1:-1;1323:6:24;;-1:-1:-1;1315:1:24;;-1:-1:-1;5746:18:25;;1288:45:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1343:4:24;;:45;;-1:-1:-1;;;1343:45:24;;:4;:45;;;5773:25:25;-1:-1:-1;;;;;1343:4:24;;;;-1:-1:-1;1343:19:24;;-1:-1:-1;1378:6:24;;-1:-1:-1;1370:1:24;;-1:-1:-1;5746:18:25;;1343:45:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1407:4:24;;:29;;-1:-1:-1;;;1407:29:24;;1430:4;1407:29;;;5955:51:25;1398:42:24;;-1:-1:-1;;;;;;1407:4:24;;;;-1:-1:-1;1407:14:24;;-1:-1:-1;5928:18:25;;;-1:-1:-1;1407:29:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1438:1;1398:8;:42::i;:::-;1189:258::o;292:222::-;326:5;:21;;342:4;-1:-1:-1;;;;;;326:21:24;;;;;;;357:5;:20;;;;-1:-1:-1;357:20:24;;;;;;387:5;:20;;403:3;387:20;;;;;;424:22;;-1:-1:-1;;403:3:24;424:22;;;:::i;:::-;6396:25:25;;;6452:2;6437:18;;6430:34;6384:2;6369:18;424:22:24;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;417:4:24;:29;;-1:-1:-1;;;;;;417:29:24;-1:-1:-1;;;;;417:29:24;;;;;;465:5;;457:20;;-1:-1:-1;;;457:20:24;;465:5;;457:20;;;6660:51:25;472:4:24;6727:18:25;;;6720:34;457:7:24;;;;6633:18:25;;457:20:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;495:5:24;;487:20;;-1:-1:-1;;;487:20:24;;-1:-1:-1;;;;;495:5:24;;;487:20;;;6660:51:25;502:4:24;6727:18:25;;;6720:34;487:7:24;;-1:-1:-1;487:7:24;;-1:-1:-1;6633:18:25;;487:20:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;292:222::o;2452:134:6:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:6;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;980:145:24:-;1021:4;;:45;;-1:-1:-1;;;1021:45:24;;1064:1;1021:45;;;5773:25:25;-1:-1:-1;;;;;1021:4:24;;;;:19;;1056:6;;1048:1;;5746:18:25;;1021:45:24;5619:185:25;3360:151:6;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;1453:411:24:-;1490:37;1499:21;1522:4;1490:8;:37::i;:::-;1538:4;;:45;;-1:-1:-1;;;1538:45:24;;:4;:45;;;5773:25:25;;;-1:-1:-1;;;;;1538:4:24;;;;:19;;1573:6;;1538:4;5746:18:25;;1538:45:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1602:5:24;;1593:15;;-1:-1:-1;;;1593:15:24;;-1:-1:-1;;;;;1602:5:24;;;1593:15;;;5955:51:25;1593:8:24;;-1:-1:-1;1593:8:24;;-1:-1:-1;5928:18:25;;;-1:-1:-1;1593:15:24;;-1:-1:-1;5809:203:25;1593:15:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1618:4:24;;:45;;-1:-1:-1;;;1618:45:24;;:4;:45;;;5773:25:25;-1:-1:-1;;;;;1618:4:24;;;;-1:-1:-1;1618:19:24;;-1:-1:-1;1653:6:24;;1645:1;;5746:18:25;;1618:45:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1740:4:24;;:18;;-1:-1:-1;;;1740:18:24;;:4;:18;;;5773:25:25;-1:-1:-1;;;;;1740:4:24;;;;-1:-1:-1;1740:15:24;;-1:-1:-1;5746:18:25;;;-1:-1:-1;1740:18:24;;-1:-1:-1;5619:185:25;1740:18:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1777:4:24;;:29;;-1:-1:-1;;;1777:29:24;;1800:4;1777:29;;;5955:51:25;1768:42:24;;-1:-1:-1;;;;;;1777:4:24;;;;-1:-1:-1;1777:14:24;;5928:18:25;;1777:29:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1808:1;1768:8;:42::i;:::-;1820:37;1829:21;1852:4;1820:8;:37::i;3221:133:6:-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:6;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:6;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;2738:178::-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1870:147:24;1918:37;;-1:-1:-1;;;1918:37:24;;7541:2:25;1918:37:24;;;7523:21:25;7580:2;7560:18;;;7553:30;-1:-1:-1;;;7599:18:25;;;7592:48;1918:15:24;;;;7657:18:25;;1918:37:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1965:4:24;;:45;;-1:-1:-1;;;1965:45:24;;:4;:45;;;5773:25:25;;;-1:-1:-1;;;;;1965:4:24;;;;-1:-1:-1;1965:19:24;;-1:-1:-1;2000:6:24;;1965:4;5746:18:25;;1965:45:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1870:147::o;2592:140:6:-;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3069:146;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2157:141;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;6660:51:25;;;-1:-1:-1;;;6727:18:25;;;6720:34;2196:43:0;;;;;;;;;6633:18:25;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;2304:142:6:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:6;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;555:361:24:-;601:37;610:21;633:4;601:8;:37::i;:::-;649:4;;:45;;-1:-1:-1;;;649:45:24;;:4;:45;;;5773:25:25;;;-1:-1:-1;;;;;649:4:24;;;;:19;;684:6;;649:4;5746:18:25;;649:45:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;713:4:24;;:29;;-1:-1:-1;;;713:29:24;;736:4;713:29;;;5955:51:25;704:42:24;;-1:-1:-1;;;;;;713:4:24;;;;-1:-1:-1;713:14:24;;-1:-1:-1;5928:18:25;;;-1:-1:-1;713:29:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;744:1;704:8;:42::i;:::-;756:36;765:21;788:3;756:8;:36::i;:::-;844:4;;:18;;-1:-1:-1;;;844:18:24;;:4;:18;;;5773:25:25;-1:-1:-1;;;;;844:4:24;;;;:15;;5746:18:25;;844::24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;872:37;881:21;904:4;5209:262:0;5271:1;5266;:6;5262:203;;5293:41;;;;;9130:2:25;9112:21;;;9169:2;9149:18;;;9142:30;9208:34;9203:2;9188:18;;9181:62;-1:-1:-1;;;9274:2:25;9259:18;;9252:32;9316:3;9301:19;;8928:398;5293:41:0;;;;;;;;5353:31;;;9543:21:25;;;9600:2;9580:18;;;9573:30;-1:-1:-1;;;9634:2:25;9619:18;;9612:40;9719:4;9704:20;;9697:36;;;5353:31:0;;;;;;;9684:3:25;5353:31:0;;;5403;;;9956:21:25;;;10013:2;9993:18;;;9986:30;-1:-1:-1;;;10047:2:25;10032:18;;10025:40;10132:4;10117:20;;10110:36;;;5403:31:0;;;;;;;10097:3:25;5403:31:0;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;2409:432::-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;10359:51:25;;;-1:-1:-1;;;10426:18:25;;;10419:34;;;;2712:4:0;10469:18:25;;;10462:34;2489:11:0;;1671:64;2586:43;;10332:18:25;;2652:67:0;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;14:658:25:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:25;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:25;;14:658;-1:-1:-1;;;;;;14:658:25:o;677:250::-;762:1;772:113;786:6;783:1;780:13;772:113;;;862:11;;;856:18;843:11;;;836:39;808:2;801:10;772:113;;;-1:-1:-1;;919:1:25;901:16;;894:27;677:250::o;932:1899::-;1136:4;1165:2;1205;1194:9;1190:18;1235:2;1224:9;1217:21;1258:6;1293;1287:13;1324:6;1316;1309:22;1362:2;1351:9;1347:18;1340:25;;1424:2;1414:6;1411:1;1407:14;1396:9;1392:30;1388:39;1374:53;;1462:2;1454:6;1450:15;1483:1;1493:1309;1507:6;1504:1;1501:13;1493:1309;;;-1:-1:-1;;1572:22:25;;;1568:36;1556:49;;1628:13;;1715:9;;-1:-1:-1;;;;;1711:35:25;1696:51;;1786:11;;1780:18;1680:2;1818:15;;;1811:27;;;1899:19;;1668:15;;;1931:24;;;2111:21;;;;1978:2;2064:1;2060:16;;;2048:29;;2044:38;;;2002:15;;;;2156:1;2170:523;2186:8;2181:3;2178:17;2170:523;;;2267:19;;;-1:-1:-1;;2263:33:25;2249:48;;2324:15;;2372:9;;2398:24;;;2439:74;2372:9;2487:15;;;2474:11;;;2439:74;:::i;:::-;2622:17;;;;2583:2;2560:17;-1:-1:-1;;2556:31:25;2544:44;;;;2540:53;;;-1:-1:-1;2665:14:25;;;;2214:1;2205:11;2170:523;;;-1:-1:-1;2716:6:25;;-1:-1:-1;;;2780:12:25;;;;-1:-1:-1;2745:15:25;;;;1529:1;1522:9;1493:1309;;;-1:-1:-1;2819:6:25;;932:1899;-1:-1:-1;;;;;;;932:1899:25:o;2836:1567::-;3038:4;3067:2;3107;3096:9;3092:18;3137:2;3126:9;3119:21;3160:6;3195;3189:13;3226:6;3218;3211:22;3252:2;3242:12;;3285:2;3274:9;3270:18;3263:25;;3347:2;3337:6;3334:1;3330:14;3319:9;3315:30;3311:39;3385:2;3377:6;3373:15;3406:1;3427;3437:937;3453:6;3448:3;3445:15;3437:937;;;3522:22;;;-1:-1:-1;;3518:36:25;3506:49;;3578:13;;3665:9;;-1:-1:-1;;;;;3661:35:25;3646:51;;3736:11;;3730:18;3768:15;;;3761:27;;;3849:19;;3618:15;;;3881:24;;;3971:21;;;;4016:1;;3939:2;3927:15;;;4030:236;4046:8;4041:3;4038:17;4030:236;;;4127:15;;-1:-1:-1;;;;;;4123:42:25;4109:57;;4235:17;;;;4074:1;4065:11;;;;;4192:14;;;;4030:236;;;-1:-1:-1;4352:12:25;;;;4289:5;-1:-1:-1;;;4317:15:25;;;;3479:1;3470:11;3437:937;;;-1:-1:-1;4391:6:25;;2836:1567;-1:-1:-1;;;;;;;;;2836:1567:25:o;4408:1014::-;4570:4;4599:2;4639;4628:9;4624:18;4669:2;4658:9;4651:21;4692:6;4727;4721:13;4758:6;4750;4743:22;4796:2;4785:9;4781:18;4774:25;;4858:2;4848:6;4845:1;4841:14;4830:9;4826:30;4822:39;4808:53;;4896:2;4888:6;4884:15;4917:1;4927:466;4941:6;4938:1;4935:13;4927:466;;;5006:22;;;-1:-1:-1;;5002:36:25;4990:49;;5062:13;;5104:9;;5126:24;;;5163:74;5104:9;5211:15;;;5198:11;;;5163:74;:::i;:::-;5303:2;5280:17;-1:-1:-1;;5276:31:25;5264:44;;;;5260:53;;;-1:-1:-1;5371:12:25;;;;5336:15;;;;4963:1;4956:9;4927:466;;6017:184;6087:6;6140:2;6128:9;6119:7;6115:23;6111:32;6108:52;;;6156:1;6153;6146:12;6108:52;-1:-1:-1;6179:16:25;;6017:184;-1:-1:-1;6017:184:25:o;6955:380::-;7034:1;7030:12;;;;7077;;;7098:61;;7152:4;7144:6;7140:17;7130:27;;7098:61;7205:2;7197:6;7194:14;7174:18;7171:38;7168:161;;7251:10;7246:3;7242:20;7239:1;7232:31;7286:4;7283:1;7276:15;7314:4;7311:1;7304:15;7168:161;;6955:380;;;:::o;7965:384::-;-1:-1:-1;;;;;;8150:33:25;;8138:46;;8207:13;;8120:3;;8229:74;8207:13;8292:1;8283:11;;8276:4;8264:17;;8229:74;:::i;:::-;8323:16;;;;8341:1;8319:24;;7965:384;-1:-1:-1;;;7965:384:25:o;8354:287::-;8483:3;8521:6;8515:13;8537:66;8596:6;8591:3;8584:4;8576:6;8572:17;8537:66;:::i;:::-;8619:16;;;;;8354:287;-1:-1:-1;;8354:287:25:o;8646:277::-;8713:6;8766:2;8754:9;8745:7;8741:23;8737:32;8734:52;;;8782:1;8779;8772:12;8734:52;8814:9;8808:16;8867:5;8860:13;8853:21;8846:5;8843:32;8833:60;;8889:1;8886;8879:12;8833:60;8912:5;8646:277;-1:-1:-1;;;8646:277:25:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testBuyAndSellOne()": "e816c59e",
    "testBuyMultiple()": "024b85d8",
    "testBuyThree()": "23d6213c",
    "testOutsideGasLimit()": "703fe500",
    "testSell()": "31c42ca6"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBuyAndSellOne\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBuyMultiple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBuyThree\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOutsideGasLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"testBuyMultiple()\":{\"notice\":\"make sure price increases with each token\"},\"testBuyThree()\":{\"notice\":\"make sure price increases with each token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/BondingCurve.t.sol\":\"BondingCurveTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1\",\"dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e\",\"dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155\",\"dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"src/BondingCurve.sol\":{\"keccak256\":\"0x1304e0ca50f6d66d4a6aa4f0e3f0390cf2a7ba424d49fbc536b9d128ea144998\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4089a54e8ce02bc57ec916652067d193b61268491fe1c7a5c976efae91175696\",\"dweb:/ipfs/QmZcQxMspY887c9yXrMwtT7yr5fNEi2Q39e844VhQQb4Fx\"]},\"test/BondingCurve.t.sol\":{\"keccak256\":\"0x333cab3831b585da571dcfeb3db51180b4f893b0ffc476235865f433477cd012\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://880be3bd3a406ab62b6ac073c6f5ac1e29404fa60633dffe3b09a67bbcaf5688\",\"dweb:/ipfs/QmR24oxeuWPVeDcKJrsGZrtrPJ4CtpiC81ujuCfFyjyUfD\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBuyAndSellOne"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBuyMultiple"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBuyThree"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOutsideGasLimit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSell"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "testBuyMultiple()": {
            "notice": "make sure price increases with each token"
          },
          "testBuyThree()": {
            "notice": "make sure price increases with each token"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/BondingCurve.t.sol": "BondingCurveTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8",
        "urls": [
          "bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1",
          "dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d",
        "urls": [
          "bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e",
          "dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68",
        "urls": [
          "bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155",
          "dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "src/BondingCurve.sol": {
        "keccak256": "0x1304e0ca50f6d66d4a6aa4f0e3f0390cf2a7ba424d49fbc536b9d128ea144998",
        "urls": [
          "bzz-raw://4089a54e8ce02bc57ec916652067d193b61268491fe1c7a5c976efae91175696",
          "dweb:/ipfs/QmZcQxMspY887c9yXrMwtT7yr5fNEi2Q39e844VhQQb4Fx"
        ],
        "license": "UNLICENSED"
      },
      "test/BondingCurve.t.sol": {
        "keccak256": "0x333cab3831b585da571dcfeb3db51180b4f893b0ffc476235865f433477cd012",
        "urls": [
          "bzz-raw://880be3bd3a406ab62b6ac073c6f5ac1e29404fa60633dffe3b09a67bbcaf5688",
          "dweb:/ipfs/QmR24oxeuWPVeDcKJrsGZrtrPJ4CtpiC81ujuCfFyjyUfD"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/BondingCurve.t.sol",
    "id": 44697,
    "exportedSymbols": {
      "BondingCurve": [
        44418
      ],
      "BondingCurveTest": [
        44696
      ],
      "Test": [
        12215
      ],
      "console2": [
        30110
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1981:24",
    "nodes": [
      {
        "id": 44420,
        "nodeType": "PragmaDirective",
        "src": "39:24:24",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 44423,
        "nodeType": "ImportDirective",
        "src": "65:50:24",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44697,
        "sourceUnit": 12216,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44421,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12215,
              "src": "73:4:24",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44422,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30110,
              "src": "79:8:24",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44425,
        "nodeType": "ImportDirective",
        "src": "116:53:24",
        "nodes": [],
        "absolutePath": "src/BondingCurve.sol",
        "file": "../src/BondingCurve.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44697,
        "sourceUnit": 44419,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44424,
              "name": "BondingCurve",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44418,
              "src": "124:12:24",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44696,
        "nodeType": "ContractDefinition",
        "src": "171:1848:24",
        "nodes": [
          {
            "id": 44430,
            "nodeType": "VariableDeclaration",
            "src": "211:17:24",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "bond",
            "nameLocation": "224:4:24",
            "scope": 44696,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BondingCurve_$44418",
              "typeString": "contract BondingCurve"
            },
            "typeName": {
              "id": 44429,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44428,
                "name": "BondingCurve",
                "nameLocations": [
                  "211:12:24"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44418,
                "src": "211:12:24"
              },
              "referencedDeclaration": 44418,
              "src": "211:12:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BondingCurve_$44418",
                "typeString": "contract BondingCurve"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44432,
            "nodeType": "VariableDeclaration",
            "src": "234:13:24",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "242:5:24",
            "scope": 44696,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44431,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "234:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44434,
            "nodeType": "VariableDeclaration",
            "src": "253:13:24",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "user1",
            "nameLocation": "261:5:24",
            "scope": 44696,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44433,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "253:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44436,
            "nodeType": "VariableDeclaration",
            "src": "272:13:24",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "user2",
            "nameLocation": "280:5:24",
            "scope": 44696,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44435,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "272:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44484,
            "nodeType": "FunctionDefinition",
            "src": "292:222:24",
            "nodes": [],
            "body": {
              "id": 44483,
              "nodeType": "Block",
              "src": "316:198:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44439,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44432,
                      "src": "326:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 44442,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "342:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondingCurveTest_$44696",
                            "typeString": "contract BondingCurveTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BondingCurveTest_$44696",
                            "typeString": "contract BondingCurveTest"
                          }
                        ],
                        "id": 44441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "334:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 44440,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "334:7:24",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 44443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "334:13:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "326:21:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 44445,
                  "nodeType": "ExpressionStatement",
                  "src": "326:21:24"
                },
                {
                  "expression": {
                    "id": 44451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44446,
                      "name": "user1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44434,
                      "src": "357:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307831",
                          "id": 44449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "373:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "0x1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 44448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "365:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 44447,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "365:7:24",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 44450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "365:12:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "357:20:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 44452,
                  "nodeType": "ExpressionStatement",
                  "src": "357:20:24"
                },
                {
                  "expression": {
                    "id": 44458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44453,
                      "name": "user2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44436,
                      "src": "387:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307832",
                          "id": 44456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "403:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "0x2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 44455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "395:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 44454,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "395:7:24",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 44457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "395:12:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "387:20:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 44459,
                  "nodeType": "ExpressionStatement",
                  "src": "387:20:24"
                },
                {
                  "expression": {
                    "id": 44467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44460,
                      "name": "bond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44430,
                      "src": "417:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BondingCurve_$44418",
                        "typeString": "contract BondingCurve"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 44464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "441:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "32",
                          "id": 44465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "444:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 44463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "424:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint256_$returns$_t_contract$_BondingCurve_$44418_$",
                          "typeString": "function (uint256,uint256) returns (contract BondingCurve)"
                        },
                        "typeName": {
                          "id": 44462,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 44461,
                            "name": "BondingCurve",
                            "nameLocations": [
                              "428:12:24"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44418,
                            "src": "428:12:24"
                          },
                          "referencedDeclaration": 44418,
                          "src": "428:12:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondingCurve_$44418",
                            "typeString": "contract BondingCurve"
                          }
                        }
                      },
                      "id": 44466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "424:22:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BondingCurve_$44418",
                        "typeString": "contract BondingCurve"
                      }
                    },
                    "src": "417:29:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BondingCurve_$44418",
                      "typeString": "contract BondingCurve"
                    }
                  },
                  "id": 44468,
                  "nodeType": "ExpressionStatement",
                  "src": "417:29:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44472,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44432,
                        "src": "465:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 44473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "472:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 44469,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "457:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13921",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "460:4:24",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13499,
                      "src": "457:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 44474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "457:20:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44475,
                  "nodeType": "ExpressionStatement",
                  "src": "457:20:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44479,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44434,
                        "src": "495:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 44480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "502:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 44476,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "487:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13921",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "490:4:24",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13499,
                      "src": "487:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 44481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "487:20:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44482,
                  "nodeType": "ExpressionStatement",
                  "src": "487:20:24"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "301:5:24",
            "parameters": {
              "id": 44437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "306:2:24"
            },
            "returnParameters": {
              "id": 44438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "316:0:24"
            },
            "scope": 44696,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44488,
            "nodeType": "FunctionDefinition",
            "src": "520:29:24",
            "nodes": [],
            "body": {
              "id": 44487,
              "nodeType": "Block",
              "src": "547:2:24",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 44485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "527:2:24"
            },
            "returnParameters": {
              "id": 44486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "547:0:24"
            },
            "scope": 44696,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44545,
            "nodeType": "FunctionDefinition",
            "src": "555:361:24",
            "nodes": [],
            "body": {
              "id": 44544,
              "nodeType": "Block",
              "src": "591:325:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 44494,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "618:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondingCurveTest_$44696",
                                "typeString": "contract BondingCurveTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondingCurveTest_$44696",
                                "typeString": "contract BondingCurveTest"
                              }
                            ],
                            "id": 44493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "610:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44492,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "610:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "610:13:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 44496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "624:7:24",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "610:21:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 44497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "633:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "id": 44491,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "601:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "601:37:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44499,
                  "nodeType": "ExpressionStatement",
                  "src": "601:37:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "692:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 44500,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44430,
                          "src": "649:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondingCurve_$44418",
                            "typeString": "contract BondingCurve"
                          }
                        },
                        "id": 44502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "654:14:24",
                        "memberName": "purchaseTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44256,
                        "src": "649:19:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 44505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value",
                        "gas"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 44503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "676:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "313530303030",
                          "id": 44504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "684:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_150000_by_1",
                            "typeString": "int_const 150000"
                          },
                          "value": "150000"
                        }
                      ],
                      "src": "649:42:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$gasvalue",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 44507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "649:45:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44508,
                  "nodeType": "ExpressionStatement",
                  "src": "649:45:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 44514,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "736:4:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondingCurveTest_$44696",
                                  "typeString": "contract BondingCurveTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondingCurveTest_$44696",
                                  "typeString": "contract BondingCurveTest"
                                }
                              ],
                              "id": 44513,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "728:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 44512,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "728:7:24",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 44515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "728:13:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 44510,
                            "name": "bond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44430,
                            "src": "713:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondingCurve_$44418",
                              "typeString": "contract BondingCurve"
                            }
                          },
                          "id": 44511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "718:9:24",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43586,
                          "src": "713:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 44516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "713:29:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 44517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "744:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 44509,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "704:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "704:42:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44519,
                  "nodeType": "ExpressionStatement",
                  "src": "704:42:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 44523,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "773:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondingCurveTest_$44696",
                                "typeString": "contract BondingCurveTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondingCurveTest_$44696",
                                "typeString": "contract BondingCurveTest"
                              }
                            ],
                            "id": 44522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "765:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44521,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "765:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "765:13:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 44525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "779:7:24",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "765:21:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "393939",
                        "id": 44526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "788:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_999_by_1",
                          "typeString": "int_const 999"
                        },
                        "value": "999"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_999_by_1",
                          "typeString": "int_const 999"
                        }
                      ],
                      "id": 44520,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "756:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "756:36:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44528,
                  "nodeType": "ExpressionStatement",
                  "src": "756:36:24"
                },
                {
                  "documentation": "@dev sell and get money back",
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "860:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 44529,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44430,
                        "src": "844:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondingCurve_$44418",
                          "typeString": "contract BondingCurve"
                        }
                      },
                      "id": 44531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "849:10:24",
                      "memberName": "sellTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44299,
                      "src": "844:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 44533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "844:18:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44534,
                  "nodeType": "ExpressionStatement",
                  "src": "844:18:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 44538,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "889:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondingCurveTest_$44696",
                                "typeString": "contract BondingCurveTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondingCurveTest_$44696",
                                "typeString": "contract BondingCurveTest"
                              }
                            ],
                            "id": 44537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "881:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44536,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "881:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "881:13:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 44540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "895:7:24",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "881:21:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 44541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "904:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "id": 44535,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "872:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "872:37:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44543,
                  "nodeType": "ExpressionStatement",
                  "src": "872:37:24"
                }
              ]
            },
            "functionSelector": "e816c59e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBuyAndSellOne",
            "nameLocation": "564:17:24",
            "parameters": {
              "id": 44489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "581:2:24"
            },
            "returnParameters": {
              "id": 44490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "591:0:24"
            },
            "scope": 44696,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44570,
            "nodeType": "FunctionDefinition",
            "src": "980:145:24",
            "nodes": [],
            "body": {
              "id": 44569,
              "nodeType": "Block",
              "src": "1011:114:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 44555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1064:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "expression": {
                          "id": 44549,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44430,
                          "src": "1021:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondingCurve_$44418",
                            "typeString": "contract BondingCurve"
                          }
                        },
                        "id": 44551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1026:14:24",
                        "memberName": "purchaseTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44256,
                        "src": "1021:19:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 44554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value",
                        "gas"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "39",
                          "id": 44552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1048:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        },
                        {
                          "hexValue": "313530303030",
                          "id": 44553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1056:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_150000_by_1",
                            "typeString": "int_const 150000"
                          },
                          "value": "150000"
                        }
                      ],
                      "src": "1021:42:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$gasvalue",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 44556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1021:45:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44557,
                  "nodeType": "ExpressionStatement",
                  "src": "1021:45:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 44563,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1108:4:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondingCurveTest_$44696",
                                  "typeString": "contract BondingCurveTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondingCurveTest_$44696",
                                  "typeString": "contract BondingCurveTest"
                                }
                              ],
                              "id": 44562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1100:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 44561,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1100:7:24",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 44564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1100:13:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 44559,
                            "name": "bond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44430,
                            "src": "1085:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondingCurve_$44418",
                              "typeString": "contract BondingCurve"
                            }
                          },
                          "id": 44560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1090:9:24",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43586,
                          "src": "1085:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 44565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1085:29:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 44566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1116:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 44558,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1076:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1076:42:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44568,
                  "nodeType": "ExpressionStatement",
                  "src": "1076:42:24"
                }
              ]
            },
            "documentation": {
              "id": 44546,
              "nodeType": "StructuredDocumentation",
              "src": "922:53:24",
              "text": "@notice make sure price increases with each token"
            },
            "functionSelector": "23d6213c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBuyThree",
            "nameLocation": "989:12:24",
            "parameters": {
              "id": 44547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1001:2:24"
            },
            "returnParameters": {
              "id": 44548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1011:0:24"
            },
            "scope": 44696,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44613,
            "nodeType": "FunctionDefinition",
            "src": "1189:258:24",
            "nodes": [],
            "body": {
              "id": 44612,
              "nodeType": "Block",
              "src": "1223:224:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1276:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 44574,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44430,
                          "src": "1233:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondingCurve_$44418",
                            "typeString": "contract BondingCurve"
                          }
                        },
                        "id": 44576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1238:14:24",
                        "memberName": "purchaseTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44256,
                        "src": "1233:19:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 44579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value",
                        "gas"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 44577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1260:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "313530303030",
                          "id": 44578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1268:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_150000_by_1",
                            "typeString": "int_const 150000"
                          },
                          "value": "150000"
                        }
                      ],
                      "src": "1233:42:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$gasvalue",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 44581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1233:45:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44582,
                  "nodeType": "ExpressionStatement",
                  "src": "1233:45:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1331:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 44583,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44430,
                          "src": "1288:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondingCurve_$44418",
                            "typeString": "contract BondingCurve"
                          }
                        },
                        "id": 44585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1293:14:24",
                        "memberName": "purchaseTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44256,
                        "src": "1288:19:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 44588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value",
                        "gas"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "33",
                          "id": 44586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1315:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        {
                          "hexValue": "313530303030",
                          "id": 44587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1323:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_150000_by_1",
                            "typeString": "int_const 150000"
                          },
                          "value": "150000"
                        }
                      ],
                      "src": "1288:42:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$gasvalue",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 44590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1288:45:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44591,
                  "nodeType": "ExpressionStatement",
                  "src": "1288:45:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1386:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 44592,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44430,
                          "src": "1343:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondingCurve_$44418",
                            "typeString": "contract BondingCurve"
                          }
                        },
                        "id": 44594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1348:14:24",
                        "memberName": "purchaseTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44256,
                        "src": "1343:19:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 44597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value",
                        "gas"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "35",
                          "id": 44595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1370:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        {
                          "hexValue": "313530303030",
                          "id": 44596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1378:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_150000_by_1",
                            "typeString": "int_const 150000"
                          },
                          "value": "150000"
                        }
                      ],
                      "src": "1343:42:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$gasvalue",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 44599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1343:45:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44600,
                  "nodeType": "ExpressionStatement",
                  "src": "1343:45:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 44606,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1430:4:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondingCurveTest_$44696",
                                  "typeString": "contract BondingCurveTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondingCurveTest_$44696",
                                  "typeString": "contract BondingCurveTest"
                                }
                              ],
                              "id": 44605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1422:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 44604,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1422:7:24",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 44607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1422:13:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 44602,
                            "name": "bond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44430,
                            "src": "1407:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondingCurve_$44418",
                              "typeString": "contract BondingCurve"
                            }
                          },
                          "id": 44603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1412:9:24",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43586,
                          "src": "1407:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 44608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1407:29:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 44609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1438:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 44601,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1398:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1398:42:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44611,
                  "nodeType": "ExpressionStatement",
                  "src": "1398:42:24"
                }
              ]
            },
            "documentation": {
              "id": 44571,
              "nodeType": "StructuredDocumentation",
              "src": "1131:53:24",
              "text": "@notice make sure price increases with each token"
            },
            "functionSelector": "024b85d8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBuyMultiple",
            "nameLocation": "1198:15:24",
            "parameters": {
              "id": 44572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1213:2:24"
            },
            "returnParameters": {
              "id": 44573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1223:0:24"
            },
            "scope": 44696,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44676,
            "nodeType": "FunctionDefinition",
            "src": "1453:411:24",
            "nodes": [],
            "body": {
              "id": 44675,
              "nodeType": "Block",
              "src": "1480:384:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 44619,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1507:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondingCurveTest_$44696",
                                "typeString": "contract BondingCurveTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondingCurveTest_$44696",
                                "typeString": "contract BondingCurveTest"
                              }
                            ],
                            "id": 44618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1499:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44617,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1499:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1499:13:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 44621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1513:7:24",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1499:21:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 44622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1522:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "id": 44616,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1490:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1490:37:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44624,
                  "nodeType": "ExpressionStatement",
                  "src": "1490:37:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1581:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 44625,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44430,
                          "src": "1538:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondingCurve_$44418",
                            "typeString": "contract BondingCurve"
                          }
                        },
                        "id": 44627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1543:14:24",
                        "memberName": "purchaseTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44256,
                        "src": "1538:19:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 44630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value",
                        "gas"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 44628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1565:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "313530303030",
                          "id": 44629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1573:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_150000_by_1",
                            "typeString": "int_const 150000"
                          },
                          "value": "150000"
                        }
                      ],
                      "src": "1538:42:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$gasvalue",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 44632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1538:45:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44633,
                  "nodeType": "ExpressionStatement",
                  "src": "1538:45:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44637,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44434,
                        "src": "1602:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 44634,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1593:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13921",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1596:5:24",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13582,
                      "src": "1593:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 44638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1593:15:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44639,
                  "nodeType": "ExpressionStatement",
                  "src": "1593:15:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1661:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 44640,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44430,
                          "src": "1618:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondingCurve_$44418",
                            "typeString": "contract BondingCurve"
                          }
                        },
                        "id": 44642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1623:14:24",
                        "memberName": "purchaseTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44256,
                        "src": "1618:19:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 44645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value",
                        "gas"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "33",
                          "id": 44643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1645:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        {
                          "hexValue": "313530303030",
                          "id": 44644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1653:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_150000_by_1",
                            "typeString": "int_const 150000"
                          },
                          "value": "150000"
                        }
                      ],
                      "src": "1618:42:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$gasvalue",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 44647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1618:45:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44648,
                  "nodeType": "ExpressionStatement",
                  "src": "1618:45:24"
                },
                {
                  "documentation": "@dev first person who bought sells and makes a profit",
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1756:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 44649,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44430,
                        "src": "1740:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BondingCurve_$44418",
                          "typeString": "contract BondingCurve"
                        }
                      },
                      "id": 44651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1745:10:24",
                      "memberName": "sellTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44299,
                      "src": "1740:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 44653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1740:18:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44654,
                  "nodeType": "ExpressionStatement",
                  "src": "1740:18:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 44660,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1800:4:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BondingCurveTest_$44696",
                                  "typeString": "contract BondingCurveTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BondingCurveTest_$44696",
                                  "typeString": "contract BondingCurveTest"
                                }
                              ],
                              "id": 44659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1792:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 44658,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1792:7:24",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 44661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1792:13:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 44656,
                            "name": "bond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44430,
                            "src": "1777:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondingCurve_$44418",
                              "typeString": "contract BondingCurve"
                            }
                          },
                          "id": 44657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1782:9:24",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43586,
                          "src": "1777:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 44662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1777:29:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 44663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1808:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 44655,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1768:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1768:42:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44665,
                  "nodeType": "ExpressionStatement",
                  "src": "1768:42:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 44669,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1837:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondingCurveTest_$44696",
                                "typeString": "contract BondingCurveTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondingCurveTest_$44696",
                                "typeString": "contract BondingCurveTest"
                              }
                            ],
                            "id": 44668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1829:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44667,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1829:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1829:13:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 44671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1843:7:24",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1829:21:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303032",
                        "id": 44672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1852:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1002_by_1",
                          "typeString": "int_const 1002"
                        },
                        "value": "1002"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1002_by_1",
                          "typeString": "int_const 1002"
                        }
                      ],
                      "id": 44666,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1820:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1820:37:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44674,
                  "nodeType": "ExpressionStatement",
                  "src": "1820:37:24"
                }
              ]
            },
            "functionSelector": "31c42ca6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSell",
            "nameLocation": "1462:8:24",
            "parameters": {
              "id": 44614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1470:2:24"
            },
            "returnParameters": {
              "id": 44615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1480:0:24"
            },
            "scope": 44696,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44695,
            "nodeType": "FunctionDefinition",
            "src": "1870:147:24",
            "nodes": [],
            "body": {
              "id": 44694,
              "nodeType": "Block",
              "src": "1908:109:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "476173206c696d6974206578636565646564",
                        "id": 44682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1934:20:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21ede0a19df70f1e092d3a1bbe784d4eb596d76ce29ce3966284dd0fec3e0d72",
                          "typeString": "literal_string \"Gas limit exceeded\""
                        },
                        "value": "Gas limit exceeded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_21ede0a19df70f1e092d3a1bbe784d4eb596d76ce29ce3966284dd0fec3e0d72",
                          "typeString": "literal_string \"Gas limit exceeded\""
                        }
                      ],
                      "expression": {
                        "id": 44679,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1918:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13921",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1921:12:24",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13893,
                      "src": "1918:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 44683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1918:37:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44684,
                  "nodeType": "ExpressionStatement",
                  "src": "1918:37:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2008:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 44685,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44430,
                          "src": "1965:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondingCurve_$44418",
                            "typeString": "contract BondingCurve"
                          }
                        },
                        "id": 44687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1970:14:24",
                        "memberName": "purchaseTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44256,
                        "src": "1965:19:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 44690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value",
                        "gas"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 44688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1992:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "313635303030",
                          "id": 44689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2000:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_165000_by_1",
                            "typeString": "int_const 165000"
                          },
                          "value": "165000"
                        }
                      ],
                      "src": "1965:42:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$gasvalue",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 44692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1965:45:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44693,
                  "nodeType": "ExpressionStatement",
                  "src": "1965:45:24"
                }
              ]
            },
            "functionSelector": "703fe500",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOutsideGasLimit",
            "nameLocation": "1879:19:24",
            "parameters": {
              "id": 44677,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1898:2:24"
            },
            "returnParameters": {
              "id": 44678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1908:0:24"
            },
            "scope": 44696,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44426,
              "name": "Test",
              "nameLocations": [
                "200:4:24"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12215,
              "src": "200:4:24"
            },
            "id": 44427,
            "nodeType": "InheritanceSpecifier",
            "src": "200:4:24"
          }
        ],
        "canonicalName": "BondingCurveTest",
        "contractDependencies": [
          44418
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          44696,
          12215,
          12164,
          7700,
          7375,
          6582,
          4522,
          3784,
          2291,
          2357,
          2354
        ],
        "name": "BondingCurveTest",
        "nameLocation": "180:16:24",
        "scope": 44697,
        "usedErrors": [],
        "usedEvents": [
          5,
          9,
          13,
          17,
          21,
          25,
          29,
          33,
          39,
          45,
          53,
          61,
          67,
          73,
          79,
          85,
          2379,
          2384,
          2389,
          2396,
          2403,
          2410
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 24
}