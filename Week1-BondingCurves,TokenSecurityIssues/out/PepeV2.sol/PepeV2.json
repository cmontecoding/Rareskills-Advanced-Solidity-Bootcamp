{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_totalSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isBlacklisted",
          "type": "bool"
        }
      ],
      "name": "blacklist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "blacklists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162000eb238038062000eb2833981016040819052620000349162000338565b60408051808201825260068152652832b832ab1960d11b602080830191909152825180840190935260048352635045504560e01b908301529033806200009557604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000a081620000da565b506004620000af8382620003f6565b506005620000be8282620003f6565b505050620000d333826200012a60201b60201c565b50620004ea565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216620001565760405163ec442f0560e01b8152600060048201526024016200008c565b620001646000838362000168565b5050565b62000174838362000186565b6200018183838362000205565b505050565b6001600160a01b03811660009081526006602052604090205460ff16158015620001c957506001600160a01b03821660009081526006602052604090205460ff16155b620001645760405162461bcd60e51b815260206004820152600b60248201526a109b1858dadb1a5cdd195960aa1b60448201526064016200008c565b6001600160a01b03831662000234578060036000828254620002289190620004c2565b90915550620002a89050565b6001600160a01b03831660009081526001602052604090205481811015620002895760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016200008c565b6001600160a01b03841660009081526001602052604090209082900390555b6001600160a01b038216620002c657600380548290039055620002e5565b6001600160a01b03821660009081526001602052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200032b91815260200190565b60405180910390a3505050565b6000602082840312156200034b57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200037d57607f821691505b6020821081036200039e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018157600081815260208120601f850160051c81016020861015620003cd5750805b601f850160051c820191505b81811015620003ee57828155600101620003d9565b505050505050565b81516001600160401b0381111562000412576200041262000352565b6200042a8162000423845462000368565b84620003a4565b602080601f831160018114620004625760008415620004495750858301515b600019600386901b1c1916600185901b178555620003ee565b600085815260208120601f198616915b82811015620004935788860151825594840194600190910190840162000472565b5085821015620004b25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620004e457634e487b7160e01b600052601160045260246000fd5b92915050565b6109b880620004fa6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101e8578063a9059cbb146101f0578063dd62ed3e14610203578063f2fde38b1461023c57600080fd5b806370a082311461019c578063715018a6146101c55780638da5cb5b146101cd57600080fd5b806318160ddd116100c857806318160ddd1461015357806323b872dd14610165578063313ce56714610178578063404e51291461018757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806316c0212914610130575b600080fd5b6100f761024f565b60405161010491906107c6565b60405180910390f35b61012061011b366004610830565b6102e1565b6040519015158152602001610104565b61012061013e36600461085a565b60066020526000908152604090205460ff1681565b6003545b604051908152602001610104565b61012061017336600461087c565b6102fb565b60405160128152602001610104565b61019a6101953660046108b8565b61031f565b005b6101576101aa36600461085a565b6001600160a01b031660009081526001602052604090205490565b61019a610352565b6000546040516001600160a01b039091168152602001610104565b6100f7610366565b6101206101fe366004610830565b610375565b6101576102113660046108f4565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61019a61024a36600461085a565b610383565b60606004805461025e90610927565b80601f016020809104026020016040519081016040528092919081815260200182805461028a90610927565b80156102d75780601f106102ac576101008083540402835291602001916102d7565b820191906000526020600020905b8154815290600101906020018083116102ba57829003601f168201915b5050505050905090565b6000336102ef8185856103c6565b60019150505b92915050565b6000336103098582856103d8565b610314858585610456565b506001949350505050565b6103276104b5565b6001600160a01b03919091166000908152600660205260409020805460ff1916911515919091179055565b61035a6104b5565b61036460006104e2565b565b60606005805461025e90610927565b6000336102ef818585610456565b61038b6104b5565b6001600160a01b0381166103ba57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6103c3816104e2565b50565b6103d38383836001610532565b505050565b6001600160a01b038381166000908152600260209081526040808320938616835292905220546000198114610450578181101561044157604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103b1565b61045084848484036000610532565b50505050565b6001600160a01b03831661048057604051634b637e8f60e11b8152600060048201526024016103b1565b6001600160a01b0382166104aa5760405163ec442f0560e01b8152600060048201526024016103b1565b6103d3838383610607565b6000546001600160a01b031633146103645760405163118cdaa760e01b81523360048201526024016103b1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03841661055c5760405163e602df0560e01b8152600060048201526024016103b1565b6001600160a01b03831661058657604051634a1406b160e11b8152600060048201526024016103b1565b6001600160a01b038085166000908152600260209081526040808320938716835292905220829055801561045057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105f991815260200190565b60405180910390a350505050565b610611838361061c565b6103d383838361069c565b6001600160a01b03811660009081526006602052604090205460ff1615801561065e57506001600160a01b03821660009081526006602052604090205460ff16155b6106985760405162461bcd60e51b815260206004820152600b60248201526a109b1858dadb1a5cdd195960aa1b60448201526064016103b1565b5050565b6001600160a01b0383166106c75780600360008282546106bc9190610961565b909155506107399050565b6001600160a01b0383166000908152600160205260409020548181101561071a5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103b1565b6001600160a01b03841660009081526001602052604090209082900390555b6001600160a01b03821661075557600380548290039055610774565b6001600160a01b03821660009081526001602052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516107b991815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156107f3578581018301518582016040015282016107d7565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461082b57600080fd5b919050565b6000806040838503121561084357600080fd5b61084c83610814565b946020939093013593505050565b60006020828403121561086c57600080fd5b61087582610814565b9392505050565b60008060006060848603121561089157600080fd5b61089a84610814565b92506108a860208501610814565b9150604084013590509250925092565b600080604083850312156108cb57600080fd5b6108d483610814565b9150602083013580151581146108e957600080fd5b809150509250929050565b6000806040838503121561090757600080fd5b61091083610814565b915061091e60208401610814565b90509250929050565b600181811c9082168061093b57607f821691505b60208210810361095b57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102f557634e487b7160e01b600052601160045260246000fdfea2646970667358221220919fc98922a8a849f0a95fd8bee7d8d1e1ac6ad3c439582377695b3e5af89b1a64736f6c63430008150033",
    "sourceMap": "365:976:29:-:0;;;454:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1896:113:21;;;;;;;;;;;-1:-1:-1;;;1896:113:21;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:21;;;;;510:10:29;;1269:95:19;;1322:31;;-1:-1:-1;;;1322:31:19;;1350:1;1322:31;;;349:51:36;322:18;;1322:31:19;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1962:5:21;:13;1970:5;1962;:13;:::i;:::-;-1:-1:-1;1985:7:21;:17;1995:7;1985;:17;:::i;:::-;;1896:113;;556:31:29::2;562:10;574:12;556:5;;;:31;;:::i;:::-;454:140:::0;365:976;;2912:187:19;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:19;;;-1:-1:-1;;;;;;3020:17:19;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;7721:208:21:-;-1:-1:-1;;;;;7791:21:21;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:21;;7864:1;7835:32;;;349:51:36;322:18;;7835:32:21;203:203:36;7787:91:21;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;917:203:29:-;1042:30;1063:4;1069:2;1042:20;:30::i;:::-;1082:31;1096:4;1102:2;1106:6;1082:13;:31::i;:::-;917:203;;;:::o;1189:150::-;-1:-1:-1;;;;;1281:14:29;;;;;;:10;:14;;;;;;;;1280:15;:36;;;;-1:-1:-1;;;;;;1300:16:29;;;;;;:10;:16;;;;;;;;1299:17;1280:36;1272:60;;;;-1:-1:-1;;;1272:60:29;;3334:2:36;1272:60:29;;;3316:21:36;3373:2;3353:18;;;3346:30;-1:-1:-1;;;3392:18:36;;;3385:41;3443:18;;1272:60:29;3132:335:36;6271:1107:21;-1:-1:-1;;;;;6360:18:21;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:21;;-1:-1:-1;6356:540:21;;-1:-1:-1;;;;;6570:15:21;;6548:19;6570:15;;;:9;:15;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:21;;-1:-1:-1;;;;;3919:32:36;;6649:50:21;;;3901:51:36;3968:18;;;3961:34;;;4011:18;;;4004:34;;;3874:18;;6649:50:21;3699:345:36;6599:115:21;-1:-1:-1;;;;;6834:15:21;;;;;;:9;:15;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:21;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:21;;;;;;:9;:13;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:21;7355:4;-1:-1:-1;;;;;7346:25:21;;7365:5;7346:25;;;;4195::36;;4183:2;4168:18;;4049:177;7346:25:21;;;;;;;;6271:1107;;;:::o;14:184:36:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:36;;14:184;-1:-1:-1;14:184:36:o;411:127::-;472:10;467:3;463:20;460:1;453:31;503:4;500:1;493:15;527:4;524:1;517:15;543:380;622:1;618:12;;;;665;;;686:61;;740:4;732:6;728:17;718:27;;686:61;793:2;785:6;782:14;762:18;759:38;756:161;;839:10;834:3;830:20;827:1;820:31;874:4;871:1;864:15;902:4;899:1;892:15;756:161;;543:380;;;:::o;1054:545::-;1156:2;1151:3;1148:11;1145:448;;;1192:1;1217:5;1213:2;1206:17;1262:4;1258:2;1248:19;1332:2;1320:10;1316:19;1313:1;1309:27;1303:4;1299:38;1368:4;1356:10;1353:20;1350:47;;;-1:-1:-1;1391:4:36;1350:47;1446:2;1441:3;1437:12;1434:1;1430:20;1424:4;1420:31;1410:41;;1501:82;1519:2;1512:5;1509:13;1501:82;;;1564:17;;;1545:1;1534:13;1501:82;;;1505:3;;;1054:545;;;:::o;1775:1352::-;1895:10;;-1:-1:-1;;;;;1917:30:36;;1914:56;;;1950:18;;:::i;:::-;1979:97;2069:6;2029:38;2061:4;2055:11;2029:38;:::i;:::-;2023:4;1979:97;:::i;:::-;2131:4;;2195:2;2184:14;;2212:1;2207:663;;;;2914:1;2931:6;2928:89;;;-1:-1:-1;2983:19:36;;;2977:26;2928:89;-1:-1:-1;;1732:1:36;1728:11;;;1724:24;1720:29;1710:40;1756:1;1752:11;;;1707:57;3030:81;;2177:944;;2207:663;1001:1;994:14;;;1038:4;1025:18;;-1:-1:-1;;2243:20:36;;;2361:236;2375:7;2372:1;2369:14;2361:236;;;2464:19;;;2458:26;2443:42;;2556:27;;;;2524:1;2512:14;;;;2391:19;;2361:236;;;2365:3;2625:6;2616:7;2613:19;2610:201;;;2686:19;;;2680:26;-1:-1:-1;;2769:1:36;2765:14;;;2781:3;2761:24;2757:37;2753:42;2738:58;2723:74;;2610:201;-1:-1:-1;;;;;2857:1:36;2841:14;;;2837:22;2824:36;;-1:-1:-1;1775:1352:36:o;3472:222::-;3537:9;;;3558:10;;;3555:133;;;3610:10;3605:3;3601:20;3598:1;3591:31;3645:4;3642:1;3635:15;3673:4;3670:1;3663:15;3555:133;3472:222;;;;:::o;4049:177::-;365:976:29;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101e8578063a9059cbb146101f0578063dd62ed3e14610203578063f2fde38b1461023c57600080fd5b806370a082311461019c578063715018a6146101c55780638da5cb5b146101cd57600080fd5b806318160ddd116100c857806318160ddd1461015357806323b872dd14610165578063313ce56714610178578063404e51291461018757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806316c0212914610130575b600080fd5b6100f761024f565b60405161010491906107c6565b60405180910390f35b61012061011b366004610830565b6102e1565b6040519015158152602001610104565b61012061013e36600461085a565b60066020526000908152604090205460ff1681565b6003545b604051908152602001610104565b61012061017336600461087c565b6102fb565b60405160128152602001610104565b61019a6101953660046108b8565b61031f565b005b6101576101aa36600461085a565b6001600160a01b031660009081526001602052604090205490565b61019a610352565b6000546040516001600160a01b039091168152602001610104565b6100f7610366565b6101206101fe366004610830565b610375565b6101576102113660046108f4565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61019a61024a36600461085a565b610383565b60606004805461025e90610927565b80601f016020809104026020016040519081016040528092919081815260200182805461028a90610927565b80156102d75780601f106102ac576101008083540402835291602001916102d7565b820191906000526020600020905b8154815290600101906020018083116102ba57829003601f168201915b5050505050905090565b6000336102ef8185856103c6565b60019150505b92915050565b6000336103098582856103d8565b610314858585610456565b506001949350505050565b6103276104b5565b6001600160a01b03919091166000908152600660205260409020805460ff1916911515919091179055565b61035a6104b5565b61036460006104e2565b565b60606005805461025e90610927565b6000336102ef818585610456565b61038b6104b5565b6001600160a01b0381166103ba57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6103c3816104e2565b50565b6103d38383836001610532565b505050565b6001600160a01b038381166000908152600260209081526040808320938616835292905220546000198114610450578181101561044157604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103b1565b61045084848484036000610532565b50505050565b6001600160a01b03831661048057604051634b637e8f60e11b8152600060048201526024016103b1565b6001600160a01b0382166104aa5760405163ec442f0560e01b8152600060048201526024016103b1565b6103d3838383610607565b6000546001600160a01b031633146103645760405163118cdaa760e01b81523360048201526024016103b1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03841661055c5760405163e602df0560e01b8152600060048201526024016103b1565b6001600160a01b03831661058657604051634a1406b160e11b8152600060048201526024016103b1565b6001600160a01b038085166000908152600260209081526040808320938716835292905220829055801561045057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105f991815260200190565b60405180910390a350505050565b610611838361061c565b6103d383838361069c565b6001600160a01b03811660009081526006602052604090205460ff1615801561065e57506001600160a01b03821660009081526006602052604090205460ff16155b6106985760405162461bcd60e51b815260206004820152600b60248201526a109b1858dadb1a5cdd195960aa1b60448201526064016103b1565b5050565b6001600160a01b0383166106c75780600360008282546106bc9190610961565b909155506107399050565b6001600160a01b0383166000908152600160205260409020548181101561071a5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103b1565b6001600160a01b03841660009081526001602052604090209082900390555b6001600160a01b03821661075557600380548290039055610774565b6001600160a01b03821660009081526001602052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516107b991815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156107f3578581018301518582016040015282016107d7565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461082b57600080fd5b919050565b6000806040838503121561084357600080fd5b61084c83610814565b946020939093013593505050565b60006020828403121561086c57600080fd5b61087582610814565b9392505050565b60008060006060848603121561089157600080fd5b61089a84610814565b92506108a860208501610814565b9150604084013590509250925092565b600080604083850312156108cb57600080fd5b6108d483610814565b9150602083013580151581146108e957600080fd5b809150509250929050565b6000806040838503121561090757600080fd5b61091083610814565b915061091e60208401610814565b90509250929050565b600181811c9082168061093b57607f821691505b60208210810361095b57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102f557634e487b7160e01b600052601160045260246000fdfea2646970667358221220919fc98922a8a849f0a95fd8bee7d8d1e1ac6ad3c439582377695b3e5af89b1a64736f6c63430008150033",
    "sourceMap": "365:976:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:36;;1162:22;1144:41;;1132:2;1117:18;4293:186:21;1004:187:36;405:42:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3144:97:21;3222:12;;3144:97;;;1533:25:36;;;1521:2;1506:18;3144:97:21;1387:177:36;5039:244:21;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;2044:36:36;;2032:2;2017:18;3002:82:21;1902:184:36;637:153:29;;;;;;:::i;:::-;;:::i;:::-;;3299:116:21;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:21;3364:7;3390:18;;;:9;:18;;;;;;;3299:116;2293:101:19;;;:::i;1638:85::-;1684:7;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:19;;;2589:51:36;;2577:2;2562:18;1638:85:19;2443:203:36;2276:93:21;;;:::i;3610:178::-;;;;;;:::i;:::-;;:::i;3846:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:21;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;2543:215:19;;;;;;:::i;:::-;;:::i;2074:89:21:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:24;4420:31:21;735:10:24;4436:7:21;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:24;5182:37:21;5198:4;735:10:24;5213:5:21;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:21;;5039:244;-1:-1:-1;;;;5039:244:21:o;637:153:29:-;1531:13:19;:11;:13::i;:::-;-1:-1:-1;;;;;746:20:29;;;::::1;;::::0;;;:10:::1;:20;::::0;;;;:37;;-1:-1:-1;;746:37:29::1;::::0;::::1;;::::0;;;::::1;::::0;;637:153::o;2293:101:19:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2276:93:21:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:24;3733:27:21;735:10:24;3750:2:21;3754:5;3733:9;:27::i;2543:215:19:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:19;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:19;;2700:1:::1;2672:31;::::0;::::1;2589:51:36::0;2562:18;;2672:31:19::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8989:128:21:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:21;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:21;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:21;;-1:-1:-1;;;;;3521:32:36;;10936:60:21;;;3503:51:36;3570:18;;;3563:34;;;3613:18;;;3606:34;;;3476:18;;10936:60:21;3301:345:36;10881:130:21;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:21;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:21;;5807:1;5780:30;;;2589:51:36;2562:18;;5780:30:21;2443:203:36;5735:86:21;-1:-1:-1;;;;;5834:16:21;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:21;;5902:1;5873:32;;;2589:51:36;2562:18;;5873:32:21;2443:203:36;5830:86:21;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;1796:162:19:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:19;735:10:24;1855:23:19;1851:101;;1901:40;;-1:-1:-1;;;1901:40:19;;735:10:24;1901:40:19;;;2589:51:36;2562:18;;1901:40:19;2443:203:36;2912:187:19;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:19;;;-1:-1:-1;;;;;;3020:17:19;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;9949:432:21:-;-1:-1:-1;;;;;10061:19:21;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:21;;10132:1;10103:32;;;2589:51:36;2562:18;;10103:32:21;2443:203:36;10057:89:21;-1:-1:-1;;;;;10159:21:21;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:21;;10231:1;10203:31;;;2589:51:36;2562:18;;10203:31:21;2443:203:36;10155:90:21;-1:-1:-1;;;;;10254:18:21;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:21;10342:5;-1:-1:-1;;;;;10333:31:21;;10358:5;10333:31;;;;1533:25:36;;1521:2;1506:18;;1387:177;10333:31:21;;;;;;;;9949:432;;;;:::o;917:203:29:-;1042:30;1063:4;1069:2;1042:20;:30::i;:::-;1082:31;1096:4;1102:2;1106:6;1082:13;:31::i;1189:150::-;-1:-1:-1;;;;;1281:14:29;;;;;;:10;:14;;;;;;;;1280:15;:36;;;;-1:-1:-1;;;;;;1300:16:29;;;;;;:10;:16;;;;;;;;1299:17;1280:36;1272:60;;;;-1:-1:-1;;;1272:60:29;;3853:2:36;1272:60:29;;;3835:21:36;3892:2;3872:18;;;3865:30;-1:-1:-1;;;3911:18:36;;;3904:41;3962:18;;1272:60:29;3651:335:36;1272:60:29;1189:150;;:::o;6271:1107:21:-;-1:-1:-1;;;;;6360:18:21;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:21;;-1:-1:-1;6356:540:21;;-1:-1:-1;;;;;6570:15:21;;6548:19;6570:15;;;:9;:15;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:21;;-1:-1:-1;;;;;3521:32:36;;6649:50:21;;;3503:51:36;3570:18;;;3563:34;;;3613:18;;;3606:34;;;3476:18;;6649:50:21;3301:345:36;6599:115:21;-1:-1:-1;;;;;6834:15:21;;;;;;:9;:15;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:21;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:21;;;;;;:9;:13;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:21;7355:4;-1:-1:-1;;;;;7346:25:21;;7365:5;7346:25;;;;1533::36;;1521:2;1506:18;;1387:177;7346:25:21;;;;;;;;6271:1107;;;:::o;14:548:36:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:36;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:36:o;1196:186::-;1255:6;1308:2;1296:9;1287:7;1283:23;1279:32;1276:52;;;1324:1;1321;1314:12;1276:52;1347:29;1366:9;1347:29;:::i;:::-;1337:39;1196:186;-1:-1:-1;;;1196:186:36:o;1569:328::-;1646:6;1654;1662;1715:2;1703:9;1694:7;1690:23;1686:32;1683:52;;;1731:1;1728;1721:12;1683:52;1754:29;1773:9;1754:29;:::i;:::-;1744:39;;1802:38;1836:2;1825:9;1821:18;1802:38;:::i;:::-;1792:48;;1887:2;1876:9;1872:18;1859:32;1849:42;;1569:328;;;;;:::o;2091:347::-;2156:6;2164;2217:2;2205:9;2196:7;2192:23;2188:32;2185:52;;;2233:1;2230;2223:12;2185:52;2256:29;2275:9;2256:29;:::i;:::-;2246:39;;2335:2;2324:9;2320:18;2307:32;2382:5;2375:13;2368:21;2361:5;2358:32;2348:60;;2404:1;2401;2394:12;2348:60;2427:5;2417:15;;;2091:347;;;;;:::o;2651:260::-;2719:6;2727;2780:2;2768:9;2759:7;2755:23;2751:32;2748:52;;;2796:1;2793;2786:12;2748:52;2819:29;2838:9;2819:29;:::i;:::-;2809:39;;2867:38;2901:2;2890:9;2886:18;2867:38;:::i;:::-;2857:48;;2651:260;;;;;:::o;2916:380::-;2995:1;2991:12;;;;3038;;;3059:61;;3113:4;3105:6;3101:17;3091:27;;3059:61;3166:2;3158:6;3155:14;3135:18;3132:38;3129:161;;3212:10;3207:3;3203:20;3200:1;3193:31;3247:4;3244:1;3237:15;3275:4;3272:1;3265:15;3129:161;;2916:380;;;:::o;3991:222::-;4056:9;;;4077:10;;;4074:133;;;4129:10;4124:3;4120:20;4117:1;4110:31;4164:4;4161:1;4154:15;4192:4;4189:1;4182:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "blacklist(address,bool)": "404e5129",
    "blacklists(address)": "16c02129",
    "decimals()": "313ce567",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isBlacklisted\",\"type\":\"bool\"}],\"name\":\"blacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"blacklist(address,bool)\":{\"notice\":\"Blacklist an address\"}},\"notice\":\"Token with sanctions. Create a fungible token that allows an admin to ban specified addresses from sending and receiving tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/PepeV2.sol\":\"PepeV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"src/PepeV2.sol\":{\"keccak256\":\"0x873e6e9ea1d9a2d69015c90ac6e946630c811ed6f8db2b6dba9a676f98a80fc2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://68626572fec72f1f5cc5bcad536a66a6bb136417f3bb943753a5a6a6a114a27d\",\"dweb:/ipfs/QmR6qaPZgCcXVVx6dcdGHYTAMet3CMetyzYcqbPhtrPeHY\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_totalSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isBlacklisted",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "blacklist"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "blacklists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "blacklist(address,bool)": {
            "notice": "Blacklist an address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/PepeV2.sol": "PepeV2"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "src/PepeV2.sol": {
        "keccak256": "0x873e6e9ea1d9a2d69015c90ac6e946630c811ed6f8db2b6dba9a676f98a80fc2",
        "urls": [
          "bzz-raw://68626572fec72f1f5cc5bcad536a66a6bb136417f3bb943753a5a6a6a114a27d",
          "dweb:/ipfs/QmR6qaPZgCcXVVx6dcdGHYTAMet3CMetyzYcqbPhtrPeHY"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/PepeV2.sol",
    "id": 44874,
    "exportedSymbols": {
      "ERC20": [
        44187
      ],
      "Ownable": [
        43535
      ],
      "PepeV2": [
        44873
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1303:29",
    "nodes": [
      {
        "id": 44775,
        "nodeType": "PragmaDirective",
        "src": "39:24:29",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 44777,
        "nodeType": "ImportDirective",
        "src": "65:76:29",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin-contracts/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44874,
        "sourceUnit": 43536,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44776,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43535,
              "src": "73:7:29",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44779,
        "nodeType": "ImportDirective",
        "src": "142:77:29",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44874,
        "sourceUnit": 44188,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44778,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44187,
              "src": "150:5:29",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44873,
        "nodeType": "ContractDefinition",
        "src": "365:976:29",
        "nodes": [
          {
            "id": 44788,
            "nodeType": "VariableDeclaration",
            "src": "405:42:29",
            "nodes": [],
            "constant": false,
            "functionSelector": "16c02129",
            "mutability": "mutable",
            "name": "blacklists",
            "nameLocation": "437:10:29",
            "scope": 44873,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 44787,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 44785,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "413:7:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "405:24:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 44786,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "424:4:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 44808,
            "nodeType": "FunctionDefinition",
            "src": "454:140:29",
            "nodes": [],
            "body": {
              "id": 44807,
              "nodeType": "Block",
              "src": "546:48:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44802,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "562:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "566:6:29",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "562:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44804,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44790,
                        "src": "574:12:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44801,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44027,
                      "src": "556:5:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 44805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "556:31:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44806,
                  "nodeType": "ExpressionStatement",
                  "src": "556:31:29"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 44793,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "510:3:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 44794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "514:6:29",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "510:10:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 44795,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 44792,
                  "name": "Ownable",
                  "nameLocations": [
                    "502:7:29"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43535,
                  "src": "502:7:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "502:19:29"
              },
              {
                "arguments": [
                  {
                    "hexValue": "506570655632",
                    "id": 44797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "528:8:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_71fbdc8f92b19c367369123e67dff652e41d1ff34a417431286505f9c376f920",
                      "typeString": "literal_string \"PepeV2\""
                    },
                    "value": "PepeV2"
                  },
                  {
                    "hexValue": "50455045",
                    "id": 44798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "538:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_608e17bb6814e7eb8d564b13416322f3d8a2dc5e36dde75519945008d7848749",
                      "typeString": "literal_string \"PEPE\""
                    },
                    "value": "PEPE"
                  }
                ],
                "id": 44799,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 44796,
                  "name": "ERC20",
                  "nameLocations": [
                    "522:5:29"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44187,
                  "src": "522:5:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "522:23:29"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 44791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44790,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "483:12:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 44808,
                  "src": "475:20:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44789,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "475:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "465:36:29"
            },
            "returnParameters": {
              "id": 44800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "546:0:29"
            },
            "scope": 44873,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44825,
            "nodeType": "FunctionDefinition",
            "src": "637:153:29",
            "nodes": [],
            "body": {
              "id": 44824,
              "nodeType": "Block",
              "src": "736:54:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44818,
                        "name": "blacklists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44788,
                        "src": "746:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 44820,
                      "indexExpression": {
                        "id": 44819,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44811,
                        "src": "757:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "746:20:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44821,
                      "name": "_isBlacklisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44813,
                      "src": "769:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "746:37:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44823,
                  "nodeType": "ExpressionStatement",
                  "src": "746:37:29"
                }
              ]
            },
            "documentation": {
              "id": 44809,
              "nodeType": "StructuredDocumentation",
              "src": "600:32:29",
              "text": "@notice Blacklist an address"
            },
            "functionSelector": "404e5129",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 44816,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 44815,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "726:9:29"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43446,
                  "src": "726:9:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "726:9:29"
              }
            ],
            "name": "blacklist",
            "nameLocation": "646:9:29",
            "parameters": {
              "id": 44814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44811,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "673:8:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 44825,
                  "src": "665:16:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44810,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "665:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44813,
                  "mutability": "mutable",
                  "name": "_isBlacklisted",
                  "nameLocation": "696:14:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 44825,
                  "src": "691:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 44812,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "655:61:29"
            },
            "returnParameters": {
              "id": 44817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "736:0:29"
            },
            "scope": 44873,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44850,
            "nodeType": "FunctionDefinition",
            "src": "917:203:29",
            "nodes": [],
            "body": {
              "id": 44849,
              "nodeType": "Block",
              "src": "1032:88:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44837,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44828,
                        "src": "1063:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44838,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44830,
                        "src": "1069:2:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44836,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44872,
                      "src": "1042:20:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 44839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1042:30:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44840,
                  "nodeType": "ExpressionStatement",
                  "src": "1042:30:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44844,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44828,
                        "src": "1096:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44845,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44830,
                        "src": "1102:2:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44846,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44832,
                        "src": "1106:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 44841,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1082:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_PepeV2_$44873_$",
                          "typeString": "type(contract super PepeV2)"
                        }
                      },
                      "id": 44843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1088:7:29",
                      "memberName": "_update",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43994,
                      "src": "1082:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 44847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1082:31:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44848,
                  "nodeType": "ExpressionStatement",
                  "src": "1082:31:29"
                }
              ]
            },
            "baseFunctions": [
              43994
            ],
            "documentation": {
              "id": 44826,
              "nodeType": "StructuredDocumentation",
              "src": "796:116:29",
              "text": "@notice Overide _update to check if the sender or receiver is blacklisted\n before completing any transfer"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_update",
            "nameLocation": "926:7:29",
            "overrides": {
              "id": 44834,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1023:8:29"
            },
            "parameters": {
              "id": 44833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44828,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "951:4:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 44850,
                  "src": "943:12:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44830,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "973:2:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 44850,
                  "src": "965:10:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44829,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44832,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "993:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 44850,
                  "src": "985:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "985:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "933:72:29"
            },
            "returnParameters": {
              "id": 44835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1032:0:29"
            },
            "scope": 44873,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 44872,
            "nodeType": "FunctionDefinition",
            "src": "1189:150:29",
            "nodes": [],
            "body": {
              "id": 44871,
              "nodeType": "Block",
              "src": "1262:77:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 44867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 44862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1280:15:29",
                          "subExpression": {
                            "baseExpression": {
                              "id": 44859,
                              "name": "blacklists",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44788,
                              "src": "1281:10:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 44861,
                            "indexExpression": {
                              "id": 44860,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44855,
                              "src": "1292:2:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1281:14:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 44866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1299:17:29",
                          "subExpression": {
                            "baseExpression": {
                              "id": 44863,
                              "name": "blacklists",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44788,
                              "src": "1300:10:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 44865,
                            "indexExpression": {
                              "id": 44864,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44853,
                              "src": "1311:4:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1300:16:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1280:36:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426c61636b6c6973746564",
                        "id": 44868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1318:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fef92ec79bbd568fc63edc095cddaebd47e166ea7932b60d9a91e79658733400",
                          "typeString": "literal_string \"Blacklisted\""
                        },
                        "value": "Blacklisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fef92ec79bbd568fc63edc095cddaebd47e166ea7932b60d9a91e79658733400",
                          "typeString": "literal_string \"Blacklisted\""
                        }
                      ],
                      "id": 44858,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1272:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 44869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1272:60:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44870,
                  "nodeType": "ExpressionStatement",
                  "src": "1272:60:29"
                }
              ]
            },
            "documentation": {
              "id": 44851,
              "nodeType": "StructuredDocumentation",
              "src": "1126:58:29",
              "text": "@notice Check if the sender or receiver is blacklisted"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "1198:20:29",
            "parameters": {
              "id": 44856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44853,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1227:4:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 44872,
                  "src": "1219:12:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44855,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1241:2:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 44872,
                  "src": "1233:10:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1233:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1218:26:29"
            },
            "returnParameters": {
              "id": 44857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1262:0:29"
            },
            "scope": 44873,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44781,
              "name": "Ownable",
              "nameLocations": [
                "384:7:29"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43535,
              "src": "384:7:29"
            },
            "id": 44782,
            "nodeType": "InheritanceSpecifier",
            "src": "384:7:29"
          },
          {
            "baseName": {
              "id": 44783,
              "name": "ERC20",
              "nameLocations": [
                "393:5:29"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44187,
              "src": "393:5:29"
            },
            "id": 44784,
            "nodeType": "InheritanceSpecifier",
            "src": "393:5:29"
          }
        ],
        "canonicalName": "PepeV2",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 44780,
          "nodeType": "StructuredDocumentation",
          "src": "221:144:29",
          "text": "@notice Token with sanctions. Create a fungible token that\n allows an admin to ban specified addresses from sending and receiving tokens."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          44873,
          44187,
          43577,
          44291,
          44265,
          43535,
          44313
        ],
        "name": "PepeV2",
        "nameLocation": "374:6:29",
        "scope": 44874,
        "usedErrors": [
          43401,
          43406,
          43547,
          43552,
          43557,
          43566,
          43571,
          43576
        ],
        "usedEvents": [
          43412,
          44199,
          44208
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 29
}